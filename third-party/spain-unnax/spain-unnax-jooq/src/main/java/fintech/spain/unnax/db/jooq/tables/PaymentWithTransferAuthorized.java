/*
 * This file is generated by jOOQ.
*/
package fintech.spain.unnax.db.jooq.tables;


import fintech.spain.unnax.db.jooq.Keys;
import fintech.spain.unnax.db.jooq.SpainUnnax;
import fintech.spain.unnax.db.jooq.tables.records.PaymentWithTransferAuthorizedRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentWithTransferAuthorized extends TableImpl<PaymentWithTransferAuthorizedRecord> {

    private static final long serialVersionUID = 1253935567;

    /**
     * The reference instance of <code>spain_unnax.payment_with_transfer_authorized</code>
     */
    public static final PaymentWithTransferAuthorized PAYMENT_WITH_TRANSFER_AUTHORIZED = new PaymentWithTransferAuthorized();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentWithTransferAuthorizedRecord> getRecordType() {
        return PaymentWithTransferAuthorizedRecord.class;
    }

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.id</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.created_at</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.created_by</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.entity_version</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.updated_at</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.updated_by</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.order_code</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.bank_order_code</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> BANK_ORDER_CODE = createField("bank_order_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.amount</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(9, 2), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.currency</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.customer_code</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> CUSTOMER_CODE = createField("customer_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.customer_names</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> CUSTOMER_NAMES = createField("customer_names", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.service</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> SERVICE = createField("service", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.status</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.success</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, Boolean> SUCCESS = createField("success", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.error_messages</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, String> ERROR_MESSAGES = createField("error_messages", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.date</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_authorized.processed_at</code>.
     */
    public final TableField<PaymentWithTransferAuthorizedRecord, LocalDateTime> PROCESSED_AT = createField("processed_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>spain_unnax.payment_with_transfer_authorized</code> table reference
     */
    public PaymentWithTransferAuthorized() {
        this("payment_with_transfer_authorized", null);
    }

    /**
     * Create an aliased <code>spain_unnax.payment_with_transfer_authorized</code> table reference
     */
    public PaymentWithTransferAuthorized(String alias) {
        this(alias, PAYMENT_WITH_TRANSFER_AUTHORIZED);
    }

    private PaymentWithTransferAuthorized(String alias, Table<PaymentWithTransferAuthorizedRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentWithTransferAuthorized(String alias, Table<PaymentWithTransferAuthorizedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainUnnax.SPAIN_UNNAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentWithTransferAuthorizedRecord> getPrimaryKey() {
        return Keys.PAYMENT_WITH_TRANSFER_AUTHORIZED_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentWithTransferAuthorizedRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentWithTransferAuthorizedRecord>>asList(Keys.PAYMENT_WITH_TRANSFER_AUTHORIZED_PKEY, Keys.PAYMENT_WITH_TRANSFER_AUTHORIZED_ORDER_CODE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentWithTransferAuthorized as(String alias) {
        return new PaymentWithTransferAuthorized(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentWithTransferAuthorized rename(String name) {
        return new PaymentWithTransferAuthorized(name, null);
    }
}
