/*
 * This file is generated by jOOQ.
*/
package fintech.spain.unnax.db.jooq.tables;


import fintech.spain.unnax.db.jooq.Keys;
import fintech.spain.unnax.db.jooq.SpainUnnax;
import fintech.spain.unnax.db.jooq.tables.records.PaymentWithTransferCompletedRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentWithTransferCompleted extends TableImpl<PaymentWithTransferCompletedRecord> {

    private static final long serialVersionUID = -73242709;

    /**
     * The reference instance of <code>spain_unnax.payment_with_transfer_completed</code>
     */
    public static final PaymentWithTransferCompleted PAYMENT_WITH_TRANSFER_COMPLETED = new PaymentWithTransferCompleted();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentWithTransferCompletedRecord> getRecordType() {
        return PaymentWithTransferCompletedRecord.class;
    }

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.id</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.created_at</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.created_by</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.entity_version</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.updated_at</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.updated_by</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.customer_code</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> CUSTOMER_CODE = createField("customer_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.order_code</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.bank_order_code</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> BANK_ORDER_CODE = createField("bank_order_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.amount</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(9, 2), this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.date</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.success</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, Boolean> SUCCESS = createField("success", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.signature</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> SIGNATURE = createField("signature", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.result</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, Boolean> RESULT = createField("result", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.account_number</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> ACCOUNT_NUMBER = createField("account_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.status</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.service</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, String> SERVICE = createField("service", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_transfer_completed.processed_at</code>.
     */
    public final TableField<PaymentWithTransferCompletedRecord, LocalDateTime> PROCESSED_AT = createField("processed_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>spain_unnax.payment_with_transfer_completed</code> table reference
     */
    public PaymentWithTransferCompleted() {
        this("payment_with_transfer_completed", null);
    }

    /**
     * Create an aliased <code>spain_unnax.payment_with_transfer_completed</code> table reference
     */
    public PaymentWithTransferCompleted(String alias) {
        this(alias, PAYMENT_WITH_TRANSFER_COMPLETED);
    }

    private PaymentWithTransferCompleted(String alias, Table<PaymentWithTransferCompletedRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentWithTransferCompleted(String alias, Table<PaymentWithTransferCompletedRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainUnnax.SPAIN_UNNAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentWithTransferCompletedRecord> getPrimaryKey() {
        return Keys.PAYMENT_WITH_TRANSFER_COMPLETED_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentWithTransferCompletedRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentWithTransferCompletedRecord>>asList(Keys.PAYMENT_WITH_TRANSFER_COMPLETED_PKEY, Keys.PAYMENT_WITH_TRANSFER_COMPLETED_ORDER_CODE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentWithTransferCompleted as(String alias) {
        return new PaymentWithTransferCompleted(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentWithTransferCompleted rename(String name) {
        return new PaymentWithTransferCompleted(name, null);
    }
}
