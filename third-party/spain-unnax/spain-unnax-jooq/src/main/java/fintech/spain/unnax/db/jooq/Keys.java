/*
 * This file is generated by jOOQ.
*/
package fintech.spain.unnax.db.jooq;


import fintech.spain.unnax.db.jooq.tables.*;
import fintech.spain.unnax.db.jooq.tables.records.*;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships between tables of the <code>spain_unnax</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CallbackRecord> CALLBACK_PKEY = UniqueKeys0.CALLBACK_PKEY;
    public static final UniqueKey<CardChargeRequestRecord> CARD_CHARGE_REQUEST_PKEY = UniqueKeys0.CARD_CHARGE_REQUEST_PKEY;
    public static final UniqueKey<CreditCardRecord> CREDIT_CARD_PKEY = UniqueKeys0.CREDIT_CARD_PKEY;
    public static final UniqueKey<DisbursementQueueRecord> DISBURSEMENT_QUEUE_PKEY = UniqueKeys0.DISBURSEMENT_QUEUE_PKEY;
    public static final UniqueKey<PaymentWithCardRecord> PAYMENT_WITH_CARD_PKEY = UniqueKeys0.PAYMENT_WITH_CARD_PKEY;
    public static final UniqueKey<PaymentWithCardRecord> PAYMENT_WITH_CARD_ORDER_CODE_KEY = UniqueKeys0.PAYMENT_WITH_CARD_ORDER_CODE_KEY;
    public static final UniqueKey<PaymentWithTransferAuthorizedRecord> PAYMENT_WITH_TRANSFER_AUTHORIZED_PKEY = UniqueKeys0.PAYMENT_WITH_TRANSFER_AUTHORIZED_PKEY;
    public static final UniqueKey<PaymentWithTransferAuthorizedRecord> PAYMENT_WITH_TRANSFER_AUTHORIZED_ORDER_CODE_KEY = UniqueKeys0.PAYMENT_WITH_TRANSFER_AUTHORIZED_ORDER_CODE_KEY;
    public static final UniqueKey<PaymentWithTransferCompletedRecord> PAYMENT_WITH_TRANSFER_COMPLETED_PKEY = UniqueKeys0.PAYMENT_WITH_TRANSFER_COMPLETED_PKEY;
    public static final UniqueKey<PaymentWithTransferCompletedRecord> PAYMENT_WITH_TRANSFER_COMPLETED_ORDER_CODE_KEY = UniqueKeys0.PAYMENT_WITH_TRANSFER_COMPLETED_ORDER_CODE_KEY;
    public static final UniqueKey<TransferAutoRecord> TRANSFER_AUTO_PKEY = UniqueKeys0.TRANSFER_AUTO_PKEY;
    public static final UniqueKey<TransferAutoRecord> TRANSFER_AUTO_ORDER_CODE_KEY = UniqueKeys0.TRANSFER_AUTO_ORDER_CODE_KEY;
    public static final UniqueKey<WebhookRecord> WEBHOOK_PKEY = UniqueKeys0.WEBHOOK_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<CallbackRecord> CALLBACK_PKEY = createUniqueKey(Callback.CALLBACK, "callback_pkey", Callback.CALLBACK.ID);
        public static final UniqueKey<CardChargeRequestRecord> CARD_CHARGE_REQUEST_PKEY = createUniqueKey(CardChargeRequest.CARD_CHARGE_REQUEST, "card_charge_request_pkey", CardChargeRequest.CARD_CHARGE_REQUEST.ID);
        public static final UniqueKey<CreditCardRecord> CREDIT_CARD_PKEY = createUniqueKey(CreditCard.CREDIT_CARD, "credit_card_pkey", CreditCard.CREDIT_CARD.ID);
        public static final UniqueKey<DisbursementQueueRecord> DISBURSEMENT_QUEUE_PKEY = createUniqueKey(DisbursementQueue.DISBURSEMENT_QUEUE, "disbursement_queue_pkey", DisbursementQueue.DISBURSEMENT_QUEUE.ID);
        public static final UniqueKey<PaymentWithCardRecord> PAYMENT_WITH_CARD_PKEY = createUniqueKey(PaymentWithCard.PAYMENT_WITH_CARD, "payment_with_card_pkey", PaymentWithCard.PAYMENT_WITH_CARD.ID);
        public static final UniqueKey<PaymentWithCardRecord> PAYMENT_WITH_CARD_ORDER_CODE_KEY = createUniqueKey(PaymentWithCard.PAYMENT_WITH_CARD, "payment_with_card_order_code_key", PaymentWithCard.PAYMENT_WITH_CARD.ORDER_CODE);
        public static final UniqueKey<PaymentWithTransferAuthorizedRecord> PAYMENT_WITH_TRANSFER_AUTHORIZED_PKEY = createUniqueKey(PaymentWithTransferAuthorized.PAYMENT_WITH_TRANSFER_AUTHORIZED, "payment_with_transfer_authorized_pkey", PaymentWithTransferAuthorized.PAYMENT_WITH_TRANSFER_AUTHORIZED.ID);
        public static final UniqueKey<PaymentWithTransferAuthorizedRecord> PAYMENT_WITH_TRANSFER_AUTHORIZED_ORDER_CODE_KEY = createUniqueKey(PaymentWithTransferAuthorized.PAYMENT_WITH_TRANSFER_AUTHORIZED, "payment_with_transfer_authorized_order_code_key", PaymentWithTransferAuthorized.PAYMENT_WITH_TRANSFER_AUTHORIZED.ORDER_CODE);
        public static final UniqueKey<PaymentWithTransferCompletedRecord> PAYMENT_WITH_TRANSFER_COMPLETED_PKEY = createUniqueKey(PaymentWithTransferCompleted.PAYMENT_WITH_TRANSFER_COMPLETED, "payment_with_transfer_completed_pkey", PaymentWithTransferCompleted.PAYMENT_WITH_TRANSFER_COMPLETED.ID);
        public static final UniqueKey<PaymentWithTransferCompletedRecord> PAYMENT_WITH_TRANSFER_COMPLETED_ORDER_CODE_KEY = createUniqueKey(PaymentWithTransferCompleted.PAYMENT_WITH_TRANSFER_COMPLETED, "payment_with_transfer_completed_order_code_key", PaymentWithTransferCompleted.PAYMENT_WITH_TRANSFER_COMPLETED.ORDER_CODE);
        public static final UniqueKey<TransferAutoRecord> TRANSFER_AUTO_PKEY = createUniqueKey(TransferAuto.TRANSFER_AUTO, "transfer_auto_pkey", TransferAuto.TRANSFER_AUTO.ID);
        public static final UniqueKey<TransferAutoRecord> TRANSFER_AUTO_ORDER_CODE_KEY = createUniqueKey(TransferAuto.TRANSFER_AUTO, "transfer_auto_order_code_key", TransferAuto.TRANSFER_AUTO.ORDER_CODE);
        public static final UniqueKey<WebhookRecord> WEBHOOK_PKEY = createUniqueKey(Webhook.WEBHOOK, "webhook_pkey", Webhook.WEBHOOK.ID);
    }
}
