/*
 * This file is generated by jOOQ.
*/
package fintech.spain.unnax.db.jooq.tables;


import fintech.spain.unnax.db.jooq.Keys;
import fintech.spain.unnax.db.jooq.SpainUnnax;
import fintech.spain.unnax.db.jooq.tables.records.PaymentWithCardRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentWithCard extends TableImpl<PaymentWithCardRecord> {

    private static final long serialVersionUID = 1323191042;

    /**
     * The reference instance of <code>spain_unnax.payment_with_card</code>
     */
    public static final PaymentWithCard PAYMENT_WITH_CARD = new PaymentWithCard();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PaymentWithCardRecord> getRecordType() {
        return PaymentWithCardRecord.class;
    }

    /**
     * The column <code>spain_unnax.payment_with_card.id</code>.
     */
    public final TableField<PaymentWithCardRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.created_at</code>.
     */
    public final TableField<PaymentWithCardRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.created_by</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.entity_version</code>.
     */
    public final TableField<PaymentWithCardRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.updated_at</code>.
     */
    public final TableField<PaymentWithCardRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.updated_by</code>.
     */
    public final TableField<PaymentWithCardRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.pan</code>.
     */
    public final TableField<PaymentWithCardRecord, String> PAN = createField("pan", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.bin</code>.
     */
    public final TableField<PaymentWithCardRecord, String> BIN = createField("bin", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.currency</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.transaction_type</code>.
     */
    public final TableField<PaymentWithCardRecord, String> TRANSACTION_TYPE = createField("transaction_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.expiration_date</code>.
     */
    public final TableField<PaymentWithCardRecord, String> EXPIRATION_DATE = createField("expiration_date", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.expire_month</code>.
     */
    public final TableField<PaymentWithCardRecord, Integer> EXPIRE_MONTH = createField("expire_month", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.expire_year</code>.
     */
    public final TableField<PaymentWithCardRecord, Integer> EXPIRE_YEAR = createField("expire_year", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.card_holder</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CARD_HOLDER = createField("card_holder", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.card_brand</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CARD_BRAND = createField("card_brand", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.card_type</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CARD_TYPE = createField("card_type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.card_country</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CARD_COUNTRY = createField("card_country", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.card_bank</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CARD_BANK = createField("card_bank", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.order_code</code>.
     */
    public final TableField<PaymentWithCardRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.token</code>.
     */
    public final TableField<PaymentWithCardRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.date</code>.
     */
    public final TableField<PaymentWithCardRecord, LocalDateTime> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.amount</code>.
     */
    public final TableField<PaymentWithCardRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(9, 2), this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.concept</code>.
     */
    public final TableField<PaymentWithCardRecord, String> CONCEPT = createField("concept", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.state</code>.
     */
    public final TableField<PaymentWithCardRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>spain_unnax.payment_with_card.processed_at</code>.
     */
    public final TableField<PaymentWithCardRecord, LocalDateTime> PROCESSED_AT = createField("processed_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>spain_unnax.payment_with_card</code> table reference
     */
    public PaymentWithCard() {
        this("payment_with_card", null);
    }

    /**
     * Create an aliased <code>spain_unnax.payment_with_card</code> table reference
     */
    public PaymentWithCard(String alias) {
        this(alias, PAYMENT_WITH_CARD);
    }

    private PaymentWithCard(String alias, Table<PaymentWithCardRecord> aliased) {
        this(alias, aliased, null);
    }

    private PaymentWithCard(String alias, Table<PaymentWithCardRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainUnnax.SPAIN_UNNAX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PaymentWithCardRecord> getPrimaryKey() {
        return Keys.PAYMENT_WITH_CARD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PaymentWithCardRecord>> getKeys() {
        return Arrays.<UniqueKey<PaymentWithCardRecord>>asList(Keys.PAYMENT_WITH_CARD_PKEY, Keys.PAYMENT_WITH_CARD_ORDER_CODE_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PaymentWithCard as(String alias) {
        return new PaymentWithCard(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PaymentWithCard rename(String name) {
        return new PaymentWithCard(name, null);
    }
}
