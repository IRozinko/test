/*
 * This file is generated by jOOQ.
*/
package fintech.bo.spain.db.jooq.payxpert.tables;


import fintech.bo.spain.db.jooq.payxpert.Keys;
import fintech.bo.spain.db.jooq.payxpert.Payxpert;
import fintech.bo.spain.db.jooq.payxpert.tables.records.RebillRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Rebill extends TableImpl<RebillRecord> {

    private static final long serialVersionUID = -13514439;

    /**
     * The reference instance of <code>payxpert.rebill</code>
     */
    public static final Rebill REBILL = new Rebill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RebillRecord> getRecordType() {
        return RebillRecord.class;
    }

    /**
     * The column <code>payxpert.rebill.id</code>.
     */
    public final TableField<RebillRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.created_at</code>.
     */
    public final TableField<RebillRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.created_by</code>.
     */
    public final TableField<RebillRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.entity_version</code>.
     */
    public final TableField<RebillRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.updated_at</code>.
     */
    public final TableField<RebillRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.updated_by</code>.
     */
    public final TableField<RebillRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.amount</code>.
     */
    public final TableField<RebillRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.client_id</code>.
     */
    public final TableField<RebillRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.currency</code>.
     */
    public final TableField<RebillRecord, String> CURRENCY = createField("currency", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>payxpert.rebill.error_code</code>.
     */
    public final TableField<RebillRecord, String> ERROR_CODE = createField("error_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.error_message</code>.
     */
    public final TableField<RebillRecord, String> ERROR_MESSAGE = createField("error_message", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.invoice_id</code>.
     */
    public final TableField<RebillRecord, Long> INVOICE_ID = createField("invoice_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payxpert.rebill.loan_id</code>.
     */
    public final TableField<RebillRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payxpert.rebill.payment_created_at</code>.
     */
    public final TableField<RebillRecord, LocalDateTime> PAYMENT_CREATED_AT = createField("payment_created_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>payxpert.rebill.payment_id</code>.
     */
    public final TableField<RebillRecord, Long> PAYMENT_ID = createField("payment_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payxpert.rebill.response_statement_descriptor</code>.
     */
    public final TableField<RebillRecord, String> RESPONSE_STATEMENT_DESCRIPTOR = createField("response_statement_descriptor", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.response_transaction_id</code>.
     */
    public final TableField<RebillRecord, String> RESPONSE_TRANSACTION_ID = createField("response_transaction_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.status</code>.
     */
    public final TableField<RebillRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payxpert.rebill.credit_card_id</code>.
     */
    public final TableField<RebillRecord, Long> CREDIT_CARD_ID = createField("credit_card_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>payxpert.rebill</code> table reference
     */
    public Rebill() {
        this("rebill", null);
    }

    /**
     * Create an aliased <code>payxpert.rebill</code> table reference
     */
    public Rebill(String alias) {
        this(alias, REBILL);
    }

    private Rebill(String alias, Table<RebillRecord> aliased) {
        this(alias, aliased, null);
    }

    private Rebill(String alias, Table<RebillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Payxpert.PAYXPERT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RebillRecord> getPrimaryKey() {
        return Keys.REBILL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RebillRecord>> getKeys() {
        return Arrays.<UniqueKey<RebillRecord>>asList(Keys.REBILL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RebillRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RebillRecord, ?>>asList(Keys.REBILL__FKI45WNQ1KYTC59DYUTWNMNL7VC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Rebill as(String alias) {
        return new Rebill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Rebill rename(String name) {
        return new Rebill(name, null);
    }
}
