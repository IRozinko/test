/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.presence.tables;


import fintech.bo.db.jooq.presence.Keys;
import fintech.bo.db.jooq.presence.Presence;
import fintech.bo.db.jooq.presence.tables.records.OutboundLoadRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OutboundLoad extends TableImpl<OutboundLoadRecord> {

    private static final long serialVersionUID = -816137806;

    /**
     * The reference instance of <code>presence.outbound_load</code>
     */
    public static final OutboundLoad OUTBOUND_LOAD = new OutboundLoad();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OutboundLoadRecord> getRecordType() {
        return OutboundLoadRecord.class;
    }

    /**
     * The column <code>presence.outbound_load.id</code>.
     */
    public final TableField<OutboundLoadRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.entity_version</code>.
     */
    public final TableField<OutboundLoadRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.created_at</code>.
     */
    public final TableField<OutboundLoadRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.updated_at</code>.
     */
    public final TableField<OutboundLoadRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.created_by</code>.
     */
    public final TableField<OutboundLoadRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>presence.outbound_load.updated_by</code>.
     */
    public final TableField<OutboundLoadRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>presence.outbound_load.load_id</code>.
     */
    public final TableField<OutboundLoadRecord, Long> LOAD_ID = createField("load_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.service_id</code>.
     */
    public final TableField<OutboundLoadRecord, Long> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.status</code>.
     */
    public final TableField<OutboundLoadRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.description</code>.
     */
    public final TableField<OutboundLoadRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>presence.outbound_load.added_at</code>.
     */
    public final TableField<OutboundLoadRecord, LocalDateTime> ADDED_AT = createField("added_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>presence.outbound_load</code> table reference
     */
    public OutboundLoad() {
        this("outbound_load", null);
    }

    /**
     * Create an aliased <code>presence.outbound_load</code> table reference
     */
    public OutboundLoad(String alias) {
        this(alias, OUTBOUND_LOAD);
    }

    private OutboundLoad(String alias, Table<OutboundLoadRecord> aliased) {
        this(alias, aliased, null);
    }

    private OutboundLoad(String alias, Table<OutboundLoadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Presence.PRESENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OutboundLoadRecord> getPrimaryKey() {
        return Keys.OUTBOUND_LOAD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OutboundLoadRecord>> getKeys() {
        return Arrays.<UniqueKey<OutboundLoadRecord>>asList(Keys.OUTBOUND_LOAD_PKEY, Keys.OUTBOUND_LOAD_LOAD_ID_SERVICE_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OutboundLoad as(String alias) {
        return new OutboundLoad(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OutboundLoad rename(String name) {
        return new OutboundLoad(name, null);
    }
}
