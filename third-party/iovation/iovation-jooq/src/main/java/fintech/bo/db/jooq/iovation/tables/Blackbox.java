/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.iovation.tables;


import fintech.bo.db.jooq.iovation.Iovation;
import fintech.bo.db.jooq.iovation.Keys;
import fintech.bo.db.jooq.iovation.tables.records.BlackboxRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Blackbox extends TableImpl<BlackboxRecord> {

    private static final long serialVersionUID = 4056608;

    /**
     * The reference instance of <code>iovation.blackbox</code>
     */
    public static final Blackbox BLACKBOX = new Blackbox();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BlackboxRecord> getRecordType() {
        return BlackboxRecord.class;
    }

    /**
     * The column <code>iovation.blackbox.id</code>.
     */
    public final TableField<BlackboxRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('iovation.blackbox_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>iovation.blackbox.created_at</code>.
     */
    public final TableField<BlackboxRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>iovation.blackbox.created_by</code>.
     */
    public final TableField<BlackboxRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.blackbox.entity_version</code>.
     */
    public final TableField<BlackboxRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>iovation.blackbox.updated_at</code>.
     */
    public final TableField<BlackboxRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>iovation.blackbox.updated_by</code>.
     */
    public final TableField<BlackboxRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.blackbox.black_box</code>.
     */
    public final TableField<BlackboxRecord, String> BLACK_BOX = createField("black_box", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>iovation.blackbox.client_id</code>.
     */
    public final TableField<BlackboxRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>iovation.blackbox.ip_address</code>.
     */
    public final TableField<BlackboxRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>iovation.blackbox</code> table reference
     */
    public Blackbox() {
        this("blackbox", null);
    }

    /**
     * Create an aliased <code>iovation.blackbox</code> table reference
     */
    public Blackbox(String alias) {
        this(alias, BLACKBOX);
    }

    private Blackbox(String alias, Table<BlackboxRecord> aliased) {
        this(alias, aliased, null);
    }

    private Blackbox(String alias, Table<BlackboxRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Iovation.IOVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<BlackboxRecord, Long> getIdentity() {
        return Keys.IDENTITY_BLACKBOX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<BlackboxRecord> getPrimaryKey() {
        return Keys.BLACKBOX_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BlackboxRecord>> getKeys() {
        return Arrays.<UniqueKey<BlackboxRecord>>asList(Keys.BLACKBOX_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Blackbox as(String alias) {
        return new Blackbox(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Blackbox rename(String name) {
        return new Blackbox(name, null);
    }
}
