/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.iovation.tables;


import fintech.bo.db.jooq.iovation.Iovation;
import fintech.bo.db.jooq.iovation.Keys;
import fintech.bo.db.jooq.iovation.tables.records.TransactionRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transaction extends TableImpl<TransactionRecord> {

    private static final long serialVersionUID = -1846782458;

    /**
     * The reference instance of <code>iovation.transaction</code>
     */
    public static final Transaction TRANSACTION = new Transaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransactionRecord> getRecordType() {
        return TransactionRecord.class;
    }

    /**
     * The column <code>iovation.transaction.id</code>.
     */
    public final TableField<TransactionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('iovation.transaction_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>iovation.transaction.created_at</code>.
     */
    public final TableField<TransactionRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>iovation.transaction.created_by</code>.
     */
    public final TableField<TransactionRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.entity_version</code>.
     */
    public final TableField<TransactionRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>iovation.transaction.updated_at</code>.
     */
    public final TableField<TransactionRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>iovation.transaction.updated_by</code>.
     */
    public final TableField<TransactionRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.application_id</code>.
     */
    public final TableField<TransactionRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>iovation.transaction.black_box</code>.
     */
    public final TableField<TransactionRecord, String> BLACK_BOX = createField("black_box", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.client_id</code>.
     */
    public final TableField<TransactionRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>iovation.transaction.end_black_box</code>.
     */
    public final TableField<TransactionRecord, String> END_BLACK_BOX = createField("end_black_box", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.error</code>.
     */
    public final TableField<TransactionRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.ip_address</code>.
     */
    public final TableField<TransactionRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>iovation.transaction.reason</code>.
     */
    public final TableField<TransactionRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.result</code>.
     */
    public final TableField<TransactionRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>iovation.transaction.status</code>.
     */
    public final TableField<TransactionRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>iovation.transaction.tracking_number</code>.
     */
    public final TableField<TransactionRecord, String> TRACKING_NUMBER = createField("tracking_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>iovation.transaction</code> table reference
     */
    public Transaction() {
        this("transaction", null);
    }

    /**
     * Create an aliased <code>iovation.transaction</code> table reference
     */
    public Transaction(String alias) {
        this(alias, TRANSACTION);
    }

    private Transaction(String alias, Table<TransactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Transaction(String alias, Table<TransactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Iovation.IOVATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TransactionRecord, Long> getIdentity() {
        return Keys.IDENTITY_TRANSACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransactionRecord> getPrimaryKey() {
        return Keys.TRANSACTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransactionRecord>> getKeys() {
        return Arrays.<UniqueKey<TransactionRecord>>asList(Keys.TRANSACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Transaction as(String alias) {
        return new Transaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Transaction rename(String name) {
        return new Transaction(name, null);
    }
}
