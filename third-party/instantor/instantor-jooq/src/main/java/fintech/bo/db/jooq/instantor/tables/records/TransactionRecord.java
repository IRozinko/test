/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.instantor.tables.records;


import fintech.bo.db.jooq.instantor.tables.Transaction;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record17<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, BigDecimal, BigDecimal, String, Long, String, LocalDate, String, Long, String> {

    private static final long serialVersionUID = 1522698018;

    /**
     * Setter for <code>instantor.transaction.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>instantor.transaction.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>instantor.transaction.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>instantor.transaction.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>instantor.transaction.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>instantor.transaction.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>instantor.transaction.entity_version</code>.
     */
    public void setEntityVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>instantor.transaction.entity_version</code>.
     */
    public Long getEntityVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>instantor.transaction.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>instantor.transaction.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>instantor.transaction.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>instantor.transaction.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>instantor.transaction.account_holder_name</code>.
     */
    public void setAccountHolderName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>instantor.transaction.account_holder_name</code>.
     */
    public String getAccountHolderName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>instantor.transaction.account_number</code>.
     */
    public void setAccountNumber(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>instantor.transaction.account_number</code>.
     */
    public String getAccountNumber() {
        return (String) get(7);
    }

    /**
     * Setter for <code>instantor.transaction.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>instantor.transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>instantor.transaction.balance</code>.
     */
    public void setBalance(BigDecimal value) {
        set(9, value);
    }

    /**
     * Getter for <code>instantor.transaction.balance</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>instantor.transaction.category</code>.
     */
    public void setCategory(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>instantor.transaction.category</code>.
     */
    public String getCategory() {
        return (String) get(10);
    }

    /**
     * Setter for <code>instantor.transaction.client_id</code>.
     */
    public void setClientId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>instantor.transaction.client_id</code>.
     */
    public Long getClientId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>instantor.transaction.currency</code>.
     */
    public void setCurrency(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>instantor.transaction.currency</code>.
     */
    public String getCurrency() {
        return (String) get(12);
    }

    /**
     * Setter for <code>instantor.transaction.date</code>.
     */
    public void setDate(LocalDate value) {
        set(13, value);
    }

    /**
     * Getter for <code>instantor.transaction.date</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(13);
    }

    /**
     * Setter for <code>instantor.transaction.description</code>.
     */
    public void setDescription(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>instantor.transaction.description</code>.
     */
    public String getDescription() {
        return (String) get(14);
    }

    /**
     * Setter for <code>instantor.transaction.response_id</code>.
     */
    public void setResponseId(Long value) {
        set(15, value);
    }

    /**
     * Getter for <code>instantor.transaction.response_id</code>.
     */
    public Long getResponseId() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>instantor.transaction.nordigen_category</code>.
     */
    public void setNordigenCategory(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>instantor.transaction.nordigen_category</code>.
     */
    public String getNordigenCategory() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, BigDecimal, BigDecimal, String, Long, String, LocalDate, String, Long, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, BigDecimal, BigDecimal, String, Long, String, LocalDate, String, Long, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Transaction.TRANSACTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return Transaction.TRANSACTION.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Transaction.TRANSACTION.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Transaction.TRANSACTION.ENTITY_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return Transaction.TRANSACTION.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Transaction.TRANSACTION.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Transaction.TRANSACTION.ACCOUNT_HOLDER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Transaction.TRANSACTION.ACCOUNT_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field9() {
        return Transaction.TRANSACTION.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field10() {
        return Transaction.TRANSACTION.BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Transaction.TRANSACTION.CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return Transaction.TRANSACTION.CLIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Transaction.TRANSACTION.CURRENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field14() {
        return Transaction.TRANSACTION.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Transaction.TRANSACTION.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field16() {
        return Transaction.TRANSACTION.RESPONSE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field17() {
        return Transaction.TRANSACTION.NORDIGEN_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getEntityVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAccountHolderName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAccountNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value9() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value10() {
        return getBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getClientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value14() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value16() {
        return getResponseId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value17() {
        return getNordigenCategory();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value4(Long value) {
        setEntityVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value7(String value) {
        setAccountHolderName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value8(String value) {
        setAccountNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value9(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value10(BigDecimal value) {
        setBalance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value11(String value) {
        setCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value12(Long value) {
        setClientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value13(String value) {
        setCurrency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value14(LocalDate value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value15(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value16(Long value) {
        setResponseId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value17(String value) {
        setNordigenCategory(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord values(Long value1, LocalDateTime value2, String value3, Long value4, LocalDateTime value5, String value6, String value7, String value8, BigDecimal value9, BigDecimal value10, String value11, Long value12, String value13, LocalDate value14, String value15, Long value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(Long id, LocalDateTime createdAt, String createdBy, Long entityVersion, LocalDateTime updatedAt, String updatedBy, String accountHolderName, String accountNumber, BigDecimal amount, BigDecimal balance, String category, Long clientId, String currency, LocalDate date, String description, Long responseId, String nordigenCategory) {
        super(Transaction.TRANSACTION);

        set(0, id);
        set(1, createdAt);
        set(2, createdBy);
        set(3, entityVersion);
        set(4, updatedAt);
        set(5, updatedBy);
        set(6, accountHolderName);
        set(7, accountNumber);
        set(8, amount);
        set(9, balance);
        set(10, category);
        set(11, clientId);
        set(12, currency);
        set(13, date);
        set(14, description);
        set(15, responseId);
        set(16, nordigenCategory);
    }
}
