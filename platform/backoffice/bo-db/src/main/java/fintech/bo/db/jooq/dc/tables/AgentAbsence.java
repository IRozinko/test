/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.dc.tables;


import fintech.bo.db.jooq.dc.Dc;
import fintech.bo.db.jooq.dc.Keys;
import fintech.bo.db.jooq.dc.tables.records.AgentAbsenceRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AgentAbsence extends TableImpl<AgentAbsenceRecord> {

    private static final long serialVersionUID = 123036127;

    /**
     * The reference instance of <code>dc.agent_absence</code>
     */
    public static final AgentAbsence AGENT_ABSENCE = new AgentAbsence();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AgentAbsenceRecord> getRecordType() {
        return AgentAbsenceRecord.class;
    }

    /**
     * The column <code>dc.agent_absence.id</code>.
     */
    public final TableField<AgentAbsenceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.agent_absence.created_at</code>.
     */
    public final TableField<AgentAbsenceRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.agent_absence.created_by</code>.
     */
    public final TableField<AgentAbsenceRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.agent_absence.entity_version</code>.
     */
    public final TableField<AgentAbsenceRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.agent_absence.updated_at</code>.
     */
    public final TableField<AgentAbsenceRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.agent_absence.updated_by</code>.
     */
    public final TableField<AgentAbsenceRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.agent_absence.date_from</code>.
     */
    public final TableField<AgentAbsenceRecord, LocalDate> DATE_FROM = createField("date_from", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>dc.agent_absence.date_to</code>.
     */
    public final TableField<AgentAbsenceRecord, LocalDate> DATE_TO = createField("date_to", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>dc.agent_absence.reason</code>.
     */
    public final TableField<AgentAbsenceRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.agent_absence.agent_id</code>.
     */
    public final TableField<AgentAbsenceRecord, Long> AGENT_ID = createField("agent_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>dc.agent_absence</code> table reference
     */
    public AgentAbsence() {
        this("agent_absence", null);
    }

    /**
     * Create an aliased <code>dc.agent_absence</code> table reference
     */
    public AgentAbsence(String alias) {
        this(alias, AGENT_ABSENCE);
    }

    private AgentAbsence(String alias, Table<AgentAbsenceRecord> aliased) {
        this(alias, aliased, null);
    }

    private AgentAbsence(String alias, Table<AgentAbsenceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dc.DC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AgentAbsenceRecord> getPrimaryKey() {
        return Keys.AGENT_ABSENCE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AgentAbsenceRecord>> getKeys() {
        return Arrays.<UniqueKey<AgentAbsenceRecord>>asList(Keys.AGENT_ABSENCE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AgentAbsenceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AgentAbsenceRecord, ?>>asList(Keys.AGENT_ABSENCE__FKM0MFQM1BET67Y00UKSFRNTA6E);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsence as(String alias) {
        return new AgentAbsence(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AgentAbsence rename(String name) {
        return new AgentAbsence(name, null);
    }
}
