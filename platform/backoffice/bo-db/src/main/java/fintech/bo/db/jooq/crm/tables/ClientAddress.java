/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.ClientAddressRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientAddress extends TableImpl<ClientAddressRecord> {

    private static final long serialVersionUID = -626817913;

    /**
     * The reference instance of <code>crm.client_address</code>
     */
    public static final ClientAddress CLIENT_ADDRESS = new ClientAddress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientAddressRecord> getRecordType() {
        return ClientAddressRecord.class;
    }

    /**
     * The column <code>crm.client_address.id</code>.
     */
    public final TableField<ClientAddressRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.client_address.created_at</code>.
     */
    public final TableField<ClientAddressRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.client_address.created_by</code>.
     */
    public final TableField<ClientAddressRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.entity_version</code>.
     */
    public final TableField<ClientAddressRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.client_address.updated_at</code>.
     */
    public final TableField<ClientAddressRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.client_address.updated_by</code>.
     */
    public final TableField<ClientAddressRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.city</code>.
     */
    public final TableField<ClientAddressRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.house_number</code>.
     */
    public final TableField<ClientAddressRecord, String> HOUSE_NUMBER = createField("house_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.housing_tenure</code>.
     */
    public final TableField<ClientAddressRecord, String> HOUSING_TENURE = createField("housing_tenure", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.postal_code</code>.
     */
    public final TableField<ClientAddressRecord, String> POSTAL_CODE = createField("postal_code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.province</code>.
     */
    public final TableField<ClientAddressRecord, String> PROVINCE = createField("province", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.street</code>.
     */
    public final TableField<ClientAddressRecord, String> STREET = createField("street", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.type</code>.
     */
    public final TableField<ClientAddressRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.client_address.client_id</code>.
     */
    public final TableField<ClientAddressRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.client_address.is_primary</code>.
     */
    public final TableField<ClientAddressRecord, Boolean> IS_PRIMARY = createField("is_primary", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.client_address.house_floor</code>.
     */
    public final TableField<ClientAddressRecord, String> HOUSE_FLOOR = createField("house_floor", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client_address.house_letter</code>.
     */
    public final TableField<ClientAddressRecord, String> HOUSE_LETTER = createField("house_letter", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>crm.client_address</code> table reference
     */
    public ClientAddress() {
        this("client_address", null);
    }

    /**
     * Create an aliased <code>crm.client_address</code> table reference
     */
    public ClientAddress(String alias) {
        this(alias, CLIENT_ADDRESS);
    }

    private ClientAddress(String alias, Table<ClientAddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private ClientAddress(String alias, Table<ClientAddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientAddressRecord> getPrimaryKey() {
        return Keys.CLIENT_ADDRESS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientAddressRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientAddressRecord>>asList(Keys.CLIENT_ADDRESS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ClientAddressRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ClientAddressRecord, ?>>asList(Keys.CLIENT_ADDRESS__FK_CLIENT_ADDRESS_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientAddress as(String alias) {
        return new ClientAddress(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ClientAddress rename(String name) {
        return new ClientAddress(name, null);
    }
}
