/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.IdentityDocumentRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentityDocument extends TableImpl<IdentityDocumentRecord> {

    private static final long serialVersionUID = -992145032;

    /**
     * The reference instance of <code>crm.identity_document</code>
     */
    public static final IdentityDocument IDENTITY_DOCUMENT = new IdentityDocument();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IdentityDocumentRecord> getRecordType() {
        return IdentityDocumentRecord.class;
    }

    /**
     * The column <code>crm.identity_document.id</code>.
     */
    public final TableField<IdentityDocumentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.created_at</code>.
     */
    public final TableField<IdentityDocumentRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.created_by</code>.
     */
    public final TableField<IdentityDocumentRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.identity_document.entity_version</code>.
     */
    public final TableField<IdentityDocumentRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.updated_at</code>.
     */
    public final TableField<IdentityDocumentRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.updated_by</code>.
     */
    public final TableField<IdentityDocumentRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.identity_document.expires_at</code>.
     */
    public final TableField<IdentityDocumentRecord, LocalDate> EXPIRES_AT = createField("expires_at", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>crm.identity_document.issued_at</code>.
     */
    public final TableField<IdentityDocumentRecord, LocalDate> ISSUED_AT = createField("issued_at", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>crm.identity_document.issued_by</code>.
     */
    public final TableField<IdentityDocumentRecord, String> ISSUED_BY = createField("issued_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.identity_document.number</code>.
     */
    public final TableField<IdentityDocumentRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.is_primary</code>.
     */
    public final TableField<IdentityDocumentRecord, Boolean> IS_PRIMARY = createField("is_primary", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.document_type</code>.
     */
    public final TableField<IdentityDocumentRecord, String> DOCUMENT_TYPE = createField("document_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.client_id</code>.
     */
    public final TableField<IdentityDocumentRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.identity_document.nationality_id</code>.
     */
    public final TableField<IdentityDocumentRecord, Long> NATIONALITY_ID = createField("nationality_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>crm.identity_document</code> table reference
     */
    public IdentityDocument() {
        this("identity_document", null);
    }

    /**
     * Create an aliased <code>crm.identity_document</code> table reference
     */
    public IdentityDocument(String alias) {
        this(alias, IDENTITY_DOCUMENT);
    }

    private IdentityDocument(String alias, Table<IdentityDocumentRecord> aliased) {
        this(alias, aliased, null);
    }

    private IdentityDocument(String alias, Table<IdentityDocumentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IdentityDocumentRecord> getPrimaryKey() {
        return Keys.IDENTITY_DOCUMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IdentityDocumentRecord>> getKeys() {
        return Arrays.<UniqueKey<IdentityDocumentRecord>>asList(Keys.IDENTITY_DOCUMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<IdentityDocumentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IdentityDocumentRecord, ?>>asList(Keys.IDENTITY_DOCUMENT__FK_IDENTITY_DOCUMENT_CLIENT_ID, Keys.IDENTITY_DOCUMENT__FK_IDENTITY_DOCUMENT_NATIONALITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IdentityDocument as(String alias) {
        return new IdentityDocument(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IdentityDocument rename(String name) {
        return new IdentityDocument(name, null);
    }
}
