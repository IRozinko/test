/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables.records;


import fintech.bo.db.jooq.crm.tables.ClientBankAccount;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClientBankAccountRecord extends UpdatableRecordImpl<ClientBankAccountRecord> implements Record14<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, BigDecimal, String, String, Boolean, Long, Long> {

    private static final long serialVersionUID = 1787644013;

    /**
     * Setter for <code>crm.client_bank_account.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>crm.client_bank_account.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>crm.client_bank_account.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>crm.client_bank_account.entity_version</code>.
     */
    public void setEntityVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.entity_version</code>.
     */
    public Long getEntityVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>crm.client_bank_account.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>crm.client_bank_account.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>crm.client_bank_account.account_number</code>.
     */
    public void setAccountNumber(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.account_number</code>.
     */
    public String getAccountNumber() {
        return (String) get(6);
    }

    /**
     * Setter for <code>crm.client_bank_account.account_owner_name</code>.
     */
    public void setAccountOwnerName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.account_owner_name</code>.
     */
    public String getAccountOwnerName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>crm.client_bank_account.balance</code>.
     */
    public void setBalance(BigDecimal value) {
        set(8, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.balance</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>crm.client_bank_account.bank_name</code>.
     */
    public void setBankName(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.bank_name</code>.
     */
    public String getBankName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>crm.client_bank_account.currency</code>.
     */
    public void setCurrency(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.currency</code>.
     */
    public String getCurrency() {
        return (String) get(10);
    }

    /**
     * Setter for <code>crm.client_bank_account.is_primary</code>.
     */
    public void setIsPrimary(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.is_primary</code>.
     */
    public Boolean getIsPrimary() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>crm.client_bank_account.client_id</code>.
     */
    public void setClientId(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.client_id</code>.
     */
    public Long getClientId() {
        return (Long) get(12);
    }

    /**
     * Setter for <code>crm.client_bank_account.number_of_transactions</code>.
     */
    public void setNumberOfTransactions(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>crm.client_bank_account.number_of_transactions</code>.
     */
    public Long getNumberOfTransactions() {
        return (Long) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, BigDecimal, String, String, Boolean, Long, Long> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, BigDecimal, String, String, Boolean, Long, Long> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.ENTITY_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.ACCOUNT_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.ACCOUNT_OWNER_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field9() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.BALANCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.BANK_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.CURRENCY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field12() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.IS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field13() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.CLIENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field14() {
        return ClientBankAccount.CLIENT_BANK_ACCOUNT.NUMBER_OF_TRANSACTIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getEntityVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAccountNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getAccountOwnerName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value9() {
        return getBalance();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getBankName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getCurrency();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value12() {
        return getIsPrimary();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value13() {
        return getClientId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value14() {
        return getNumberOfTransactions();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value4(Long value) {
        setEntityVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value7(String value) {
        setAccountNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value8(String value) {
        setAccountOwnerName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value9(BigDecimal value) {
        setBalance(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value10(String value) {
        setBankName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value11(String value) {
        setCurrency(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value12(Boolean value) {
        setIsPrimary(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value13(Long value) {
        setClientId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord value14(Long value) {
        setNumberOfTransactions(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClientBankAccountRecord values(Long value1, LocalDateTime value2, String value3, Long value4, LocalDateTime value5, String value6, String value7, String value8, BigDecimal value9, String value10, String value11, Boolean value12, Long value13, Long value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClientBankAccountRecord
     */
    public ClientBankAccountRecord() {
        super(ClientBankAccount.CLIENT_BANK_ACCOUNT);
    }

    /**
     * Create a detached, initialised ClientBankAccountRecord
     */
    public ClientBankAccountRecord(Long id, LocalDateTime createdAt, String createdBy, Long entityVersion, LocalDateTime updatedAt, String updatedBy, String accountNumber, String accountOwnerName, BigDecimal balance, String bankName, String currency, Boolean isPrimary, Long clientId, Long numberOfTransactions) {
        super(ClientBankAccount.CLIENT_BANK_ACCOUNT);

        set(0, id);
        set(1, createdAt);
        set(2, createdBy);
        set(3, entityVersion);
        set(4, updatedAt);
        set(5, updatedBy);
        set(6, accountNumber);
        set(7, accountOwnerName);
        set(8, balance);
        set(9, bankName);
        set(10, currency);
        set(11, isPrimary);
        set(12, clientId);
        set(13, numberOfTransactions);
    }
}
