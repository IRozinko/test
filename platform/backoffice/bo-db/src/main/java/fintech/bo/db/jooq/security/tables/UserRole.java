/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.security.tables;


import fintech.bo.db.jooq.security.Keys;
import fintech.bo.db.jooq.security.Security;
import fintech.bo.db.jooq.security.tables.records.UserRoleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRole extends TableImpl<UserRoleRecord> {

    private static final long serialVersionUID = 121848356;

    /**
     * The reference instance of <code>security.user_role</code>
     */
    public static final UserRole USER_ROLE = new UserRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRoleRecord> getRecordType() {
        return UserRoleRecord.class;
    }

    /**
     * The column <code>security.user_role.user_id</code>.
     */
    public final TableField<UserRoleRecord, Long> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>security.user_role.role_id</code>.
     */
    public final TableField<UserRoleRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>security.user_role</code> table reference
     */
    public UserRole() {
        this("user_role", null);
    }

    /**
     * Create an aliased <code>security.user_role</code> table reference
     */
    public UserRole(String alias) {
        this(alias, USER_ROLE);
    }

    private UserRole(String alias, Table<UserRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserRole(String alias, Table<UserRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Security.SECURITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserRoleRecord, ?>>asList(Keys.USER_ROLE__FK859N2JVI8IVHUI0RL0ESWS6O, Keys.USER_ROLE__FKA68196081FVOVJHKEK5M97N3Y);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRole as(String alias) {
        return new UserRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserRole rename(String name) {
        return new UserRole(name, null);
    }
}
