/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.EmailContactRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailContact extends TableImpl<EmailContactRecord> {

    private static final long serialVersionUID = 1483165234;

    /**
     * The reference instance of <code>crm.email_contact</code>
     */
    public static final EmailContact EMAIL_CONTACT = new EmailContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailContactRecord> getRecordType() {
        return EmailContactRecord.class;
    }

    /**
     * The column <code>crm.email_contact.id</code>.
     */
    public final TableField<EmailContactRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.created_at</code>.
     */
    public final TableField<EmailContactRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.created_by</code>.
     */
    public final TableField<EmailContactRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.email_contact.entity_version</code>.
     */
    public final TableField<EmailContactRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.updated_at</code>.
     */
    public final TableField<EmailContactRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.updated_by</code>.
     */
    public final TableField<EmailContactRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.email_contact.email</code>.
     */
    public final TableField<EmailContactRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.is_primary</code>.
     */
    public final TableField<EmailContactRecord, Boolean> IS_PRIMARY = createField("is_primary", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.client_id</code>.
     */
    public final TableField<EmailContactRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.email_contact.verified</code>.
     */
    public final TableField<EmailContactRecord, Boolean> VERIFIED = createField("verified", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.email_contact.verified_at</code>.
     */
    public final TableField<EmailContactRecord, LocalDateTime> VERIFIED_AT = createField("verified_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>crm.email_contact</code> table reference
     */
    public EmailContact() {
        this("email_contact", null);
    }

    /**
     * Create an aliased <code>crm.email_contact</code> table reference
     */
    public EmailContact(String alias) {
        this(alias, EMAIL_CONTACT);
    }

    private EmailContact(String alias, Table<EmailContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmailContact(String alias, Table<EmailContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmailContactRecord> getPrimaryKey() {
        return Keys.EMAIL_CONTACT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmailContactRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailContactRecord>>asList(Keys.EMAIL_CONTACT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmailContactRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmailContactRecord, ?>>asList(Keys.EMAIL_CONTACT__FK_EMAIL_CONTACT_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailContact as(String alias) {
        return new EmailContact(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailContact rename(String name) {
        return new EmailContact(name, null);
    }
}
