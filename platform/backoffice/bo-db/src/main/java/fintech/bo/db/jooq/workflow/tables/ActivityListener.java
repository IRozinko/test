/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.workflow.tables;


import fintech.bo.db.jooq.workflow.Keys;
import fintech.bo.db.jooq.workflow.Workflow;
import fintech.bo.db.jooq.workflow.tables.records.ActivityListenerRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivityListener extends TableImpl<ActivityListenerRecord> {

    private static final long serialVersionUID = 1648523197;

    /**
     * The reference instance of <code>workflow.activity_listener</code>
     */
    public static final ActivityListener ACTIVITY_LISTENER = new ActivityListener();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityListenerRecord> getRecordType() {
        return ActivityListenerRecord.class;
    }

    /**
     * The column <code>workflow.activity_listener.id</code>.
     */
    public final TableField<ActivityListenerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.created_at</code>.
     */
    public final TableField<ActivityListenerRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.created_by</code>.
     */
    public final TableField<ActivityListenerRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.activity_listener.updated_at</code>.
     */
    public final TableField<ActivityListenerRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.updated_by</code>.
     */
    public final TableField<ActivityListenerRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.activity_listener.entity_version</code>.
     */
    public final TableField<ActivityListenerRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.name</code>.
     */
    public final TableField<ActivityListenerRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.workflow_name</code>.
     */
    public final TableField<ActivityListenerRecord, String> WORKFLOW_NAME = createField("workflow_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.workflow_version</code>.
     */
    public final TableField<ActivityListenerRecord, Integer> WORKFLOW_VERSION = createField("workflow_version", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.activity_name</code>.
     */
    public final TableField<ActivityListenerRecord, String> ACTIVITY_NAME = createField("activity_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.trigger_name</code>.
     */
    public final TableField<ActivityListenerRecord, String> TRIGGER_NAME = createField("trigger_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.activity_status</code>.
     */
    public final TableField<ActivityListenerRecord, String> ACTIVITY_STATUS = createField("activity_status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.resolution</code>.
     */
    public final TableField<ActivityListenerRecord, String> RESOLUTION = createField("resolution", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.activity_listener.delay_sec</code>.
     */
    public final TableField<ActivityListenerRecord, Integer> DELAY_SEC = createField("delay_sec", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>workflow.activity_listener.from_midnight</code>.
     */
    public final TableField<ActivityListenerRecord, Boolean> FROM_MIDNIGHT = createField("from_midnight", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>workflow.activity_listener.params</code>.
     */
    public final TableField<ActivityListenerRecord, String[]> PARAMS = createField("params", org.jooq.impl.SQLDataType.CLOB.getArrayDataType(), this, "");

    /**
     * Create a <code>workflow.activity_listener</code> table reference
     */
    public ActivityListener() {
        this("activity_listener", null);
    }

    /**
     * Create an aliased <code>workflow.activity_listener</code> table reference
     */
    public ActivityListener(String alias) {
        this(alias, ACTIVITY_LISTENER);
    }

    private ActivityListener(String alias, Table<ActivityListenerRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActivityListener(String alias, Table<ActivityListenerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityListenerRecord> getPrimaryKey() {
        return Keys.ACTIVITY_LISTENER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityListenerRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityListenerRecord>>asList(Keys.ACTIVITY_LISTENER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActivityListener as(String alias) {
        return new ActivityListener(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActivityListener rename(String name) {
        return new ActivityListener(name, null);
    }
}
