/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.EmailLoginRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailLogin extends TableImpl<EmailLoginRecord> {

    private static final long serialVersionUID = 285135708;

    /**
     * The reference instance of <code>crm.email_login</code>
     */
    public static final EmailLogin EMAIL_LOGIN = new EmailLogin();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailLoginRecord> getRecordType() {
        return EmailLoginRecord.class;
    }

    /**
     * The column <code>crm.email_login.id</code>.
     */
    public final TableField<EmailLoginRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.created_at</code>.
     */
    public final TableField<EmailLoginRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.created_by</code>.
     */
    public final TableField<EmailLoginRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.email_login.entity_version</code>.
     */
    public final TableField<EmailLoginRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.updated_at</code>.
     */
    public final TableField<EmailLoginRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.updated_by</code>.
     */
    public final TableField<EmailLoginRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.email_login.email</code>.
     */
    public final TableField<EmailLoginRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.password</code>.
     */
    public final TableField<EmailLoginRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.client_id</code>.
     */
    public final TableField<EmailLoginRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.email_login.temporary_password</code>.
     */
    public final TableField<EmailLoginRecord, Boolean> TEMPORARY_PASSWORD = createField("temporary_password", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>crm.email_login</code> table reference
     */
    public EmailLogin() {
        this("email_login", null);
    }

    /**
     * Create an aliased <code>crm.email_login</code> table reference
     */
    public EmailLogin(String alias) {
        this(alias, EMAIL_LOGIN);
    }

    private EmailLogin(String alias, Table<EmailLoginRecord> aliased) {
        this(alias, aliased, null);
    }

    private EmailLogin(String alias, Table<EmailLoginRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmailLoginRecord> getPrimaryKey() {
        return Keys.EMAIL_LOGIN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmailLoginRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailLoginRecord>>asList(Keys.EMAIL_LOGIN_PKEY, Keys.UK_8NIP4EQCKVXU35AB09A8CI3EF, Keys.IDX_EMAIL_LOGIN_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EmailLoginRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EmailLoginRecord, ?>>asList(Keys.EMAIL_LOGIN__FK_EMAIL_LOGIN_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EmailLogin as(String alias) {
        return new EmailLogin(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EmailLogin rename(String name) {
        return new EmailLogin(name, null);
    }
}
