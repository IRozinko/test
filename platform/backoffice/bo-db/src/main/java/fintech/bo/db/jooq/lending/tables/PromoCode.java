/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.lending.tables;


import fintech.bo.db.jooq.lending.Keys;
import fintech.bo.db.jooq.lending.Lending;
import fintech.bo.db.jooq.lending.tables.records.PromoCodeRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PromoCode extends TableImpl<PromoCodeRecord> {

    private static final long serialVersionUID = -455151707;

    /**
     * The reference instance of <code>lending.promo_code</code>
     */
    public static final PromoCode PROMO_CODE = new PromoCode();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PromoCodeRecord> getRecordType() {
        return PromoCodeRecord.class;
    }

    /**
     * The column <code>lending.promo_code.id</code>.
     */
    public final TableField<PromoCodeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.code</code>.
     */
    public final TableField<PromoCodeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.description</code>.
     */
    public final TableField<PromoCodeRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.promo_code.effective_from</code>.
     */
    public final TableField<PromoCodeRecord, LocalDate> EFFECTIVE_FROM = createField("effective_from", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.effective_to</code>.
     */
    public final TableField<PromoCodeRecord, LocalDate> EFFECTIVE_TO = createField("effective_to", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.rate_in_percent</code>.
     */
    public final TableField<PromoCodeRecord, BigDecimal> RATE_IN_PERCENT = createField("rate_in_percent", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.max_times_to_apply</code>.
     */
    public final TableField<PromoCodeRecord, Long> MAX_TIMES_TO_APPLY = createField("max_times_to_apply", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.new_clients_only</code>.
     */
    public final TableField<PromoCodeRecord, Boolean> NEW_CLIENTS_ONLY = createField("new_clients_only", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>lending.promo_code.entity_version</code>.
     */
    public final TableField<PromoCodeRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.created_at</code>.
     */
    public final TableField<PromoCodeRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.created_by</code>.
     */
    public final TableField<PromoCodeRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.promo_code.updated_at</code>.
     */
    public final TableField<PromoCodeRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.promo_code.updated_by</code>.
     */
    public final TableField<PromoCodeRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.promo_code.active</code>.
     */
    public final TableField<PromoCodeRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>lending.promo_code</code> table reference
     */
    public PromoCode() {
        this("promo_code", null);
    }

    /**
     * Create an aliased <code>lending.promo_code</code> table reference
     */
    public PromoCode(String alias) {
        this(alias, PROMO_CODE);
    }

    private PromoCode(String alias, Table<PromoCodeRecord> aliased) {
        this(alias, aliased, null);
    }

    private PromoCode(String alias, Table<PromoCodeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lending.LENDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PromoCodeRecord> getPrimaryKey() {
        return Keys.PROMO_CODE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PromoCodeRecord>> getKeys() {
        return Arrays.<UniqueKey<PromoCodeRecord>>asList(Keys.PROMO_CODE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PromoCode as(String alias) {
        return new PromoCode(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PromoCode rename(String name) {
        return new PromoCode(name, null);
    }
}
