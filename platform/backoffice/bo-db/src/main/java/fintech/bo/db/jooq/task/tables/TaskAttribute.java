/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.task.tables;


import fintech.bo.db.jooq.task.Keys;
import fintech.bo.db.jooq.task.Task;
import fintech.bo.db.jooq.task.tables.records.TaskAttributeRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskAttribute extends TableImpl<TaskAttributeRecord> {

    private static final long serialVersionUID = 473650451;

    /**
     * The reference instance of <code>task.task_attribute</code>
     */
    public static final TaskAttribute TASK_ATTRIBUTE = new TaskAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskAttributeRecord> getRecordType() {
        return TaskAttributeRecord.class;
    }

    /**
     * The column <code>task.task_attribute.task_id</code>.
     */
    public final TableField<TaskAttributeRecord, Long> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task_attribute.value</code>.
     */
    public final TableField<TaskAttributeRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task_attribute.key</code>.
     */
    public final TableField<TaskAttributeRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>task.task_attribute</code> table reference
     */
    public TaskAttribute() {
        this("task_attribute", null);
    }

    /**
     * Create an aliased <code>task.task_attribute</code> table reference
     */
    public TaskAttribute(String alias) {
        this(alias, TASK_ATTRIBUTE);
    }

    private TaskAttribute(String alias, Table<TaskAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskAttribute(String alias, Table<TaskAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Task.TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskAttributeRecord> getPrimaryKey() {
        return Keys.TASK_ATTRIBUTE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskAttributeRecord>>asList(Keys.TASK_ATTRIBUTE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TaskAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TaskAttributeRecord, ?>>asList(Keys.TASK_ATTRIBUTE__FKKKPEWUEYS70BCX84X9YD2DSEC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskAttribute as(String alias) {
        return new TaskAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TaskAttribute rename(String name) {
        return new TaskAttribute(name, null);
    }
}
