/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.lending.tables;


import fintech.bo.db.jooq.lending.Keys;
import fintech.bo.db.jooq.lending.Lending;
import fintech.bo.db.jooq.lending.tables.records.InstallmentRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Installment extends TableImpl<InstallmentRecord> {

    private static final long serialVersionUID = 515573241;

    /**
     * The reference instance of <code>lending.installment</code>
     */
    public static final Installment INSTALLMENT = new Installment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstallmentRecord> getRecordType() {
        return InstallmentRecord.class;
    }

    /**
     * The column <code>lending.installment.id</code>.
     */
    public final TableField<InstallmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.installment.created_at</code>.
     */
    public final TableField<InstallmentRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.installment.created_by</code>.
     */
    public final TableField<InstallmentRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.installment.entity_version</code>.
     */
    public final TableField<InstallmentRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.installment.updated_at</code>.
     */
    public final TableField<InstallmentRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.installment.updated_by</code>.
     */
    public final TableField<InstallmentRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.installment.apply_penalty</code>.
     */
    public final TableField<InstallmentRecord, Boolean> APPLY_PENALTY = createField("apply_penalty", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.installment.cash_in</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> CASH_IN = createField("cash_in", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.client_id</code>.
     */
    public final TableField<InstallmentRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.installment.close_date</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> CLOSE_DATE = createField("close_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.installment.close_reason</code>.
     */
    public final TableField<InstallmentRecord, String> CLOSE_REASON = createField("close_reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.installment.due_date</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> DUE_DATE = createField("due_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.installment.fee_applied</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> FEE_APPLIED = createField("fee_applied", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.fee_invoiced</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> FEE_INVOICED = createField("fee_invoiced", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.fee_paid</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> FEE_PAID = createField("fee_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.fee_scheduled</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> FEE_SCHEDULED = createField("fee_scheduled", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4), this, "");

    /**
     * The column <code>lending.installment.fee_written_off</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> FEE_WRITTEN_OFF = createField("fee_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.generate_invoice_on_date</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> GENERATE_INVOICE_ON_DATE = createField("generate_invoice_on_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.installment.grace_period_in_days</code>.
     */
    public final TableField<InstallmentRecord, Long> GRACE_PERIOD_IN_DAYS = createField("grace_period_in_days", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.installment.installment_number</code>.
     */
    public final TableField<InstallmentRecord, String> INSTALLMENT_NUMBER = createField("installment_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.installment.installment_sequence</code>.
     */
    public final TableField<InstallmentRecord, Long> INSTALLMENT_SEQUENCE = createField("installment_sequence", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.installment.interest_applied</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> INTEREST_APPLIED = createField("interest_applied", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.interest_invoiced</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> INTEREST_INVOICED = createField("interest_invoiced", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.interest_paid</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> INTEREST_PAID = createField("interest_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.interest_scheduled</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> INTEREST_SCHEDULED = createField("interest_scheduled", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4), this, "");

    /**
     * The column <code>lending.installment.interest_written_off</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> INTEREST_WRITTEN_OFF = createField("interest_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.invoice_file_generated_at</code>.
     */
    public final TableField<InstallmentRecord, LocalDateTime> INVOICE_FILE_GENERATED_AT = createField("invoice_file_generated_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>lending.installment.invoice_file_id</code>.
     */
    public final TableField<InstallmentRecord, Long> INVOICE_FILE_ID = createField("invoice_file_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.installment.invoice_file_name</code>.
     */
    public final TableField<InstallmentRecord, String> INVOICE_FILE_NAME = createField("invoice_file_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.installment.invoice_file_sent_at</code>.
     */
    public final TableField<InstallmentRecord, LocalDateTime> INVOICE_FILE_SENT_AT = createField("invoice_file_sent_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>lending.installment.overpayment_used</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> OVERPAYMENT_USED = createField("overpayment_used", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.penalty_applied</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PENALTY_APPLIED = createField("penalty_applied", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.penalty_invoiced</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PENALTY_INVOICED = createField("penalty_invoiced", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.penalty_paid</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PENALTY_PAID = createField("penalty_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.penalty_scheduled</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PENALTY_SCHEDULED = createField("penalty_scheduled", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4), this, "");

    /**
     * The column <code>lending.installment.penalty_written_off</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PENALTY_WRITTEN_OFF = createField("penalty_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.period_from</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> PERIOD_FROM = createField("period_from", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.installment.period_to</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> PERIOD_TO = createField("period_to", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.installment.principal_invoiced</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PRINCIPAL_INVOICED = createField("principal_invoiced", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.principal_paid</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PRINCIPAL_PAID = createField("principal_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.principal_scheduled</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PRINCIPAL_SCHEDULED = createField("principal_scheduled", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4), this, "");

    /**
     * The column <code>lending.installment.principal_written_off</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> PRINCIPAL_WRITTEN_OFF = createField("principal_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.status</code>.
     */
    public final TableField<InstallmentRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.installment.status_detail</code>.
     */
    public final TableField<InstallmentRecord, String> STATUS_DETAIL = createField("status_detail", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.installment.total_due</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> TOTAL_DUE = createField("total_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.total_paid</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> TOTAL_PAID = createField("total_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.installment.total_scheduled</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> TOTAL_SCHEDULED = createField("total_scheduled", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4), this, "");

    /**
     * The column <code>lending.installment.value_date</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> VALUE_DATE = createField("value_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.installment.loan_id</code>.
     */
    public final TableField<InstallmentRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.installment.schedule_id</code>.
     */
    public final TableField<InstallmentRecord, Long> SCHEDULE_ID = createField("schedule_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.installment.total_invoiced</code>.
     */
    public final TableField<InstallmentRecord, BigDecimal> TOTAL_INVOICED = createField("total_invoiced", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.installment.contract_id</code>.
     */
    public final TableField<InstallmentRecord, Long> CONTRACT_ID = createField("contract_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.installment.original_due_date</code>.
     */
    public final TableField<InstallmentRecord, LocalDate> ORIGINAL_DUE_DATE = createField("original_due_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.installment.dpd</code>.
     */
    public final TableField<InstallmentRecord, Integer> DPD = createField("dpd", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>lending.installment.invoice_id</code>.
     */
    public final TableField<InstallmentRecord, Long> INVOICE_ID = createField("invoice_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>lending.installment</code> table reference
     */
    public Installment() {
        this("installment", null);
    }

    /**
     * Create an aliased <code>lending.installment</code> table reference
     */
    public Installment(String alias) {
        this(alias, INSTALLMENT);
    }

    private Installment(String alias, Table<InstallmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private Installment(String alias, Table<InstallmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lending.LENDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstallmentRecord> getPrimaryKey() {
        return Keys.INSTALLMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstallmentRecord>> getKeys() {
        return Arrays.<UniqueKey<InstallmentRecord>>asList(Keys.INSTALLMENT_PKEY, Keys.UQ_INSTALLMENT_NUMBER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InstallmentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InstallmentRecord, ?>>asList(Keys.INSTALLMENT__FKDDVR1RONGDLFL3PMJ87EG48CY, Keys.INSTALLMENT__FK2SPN7U0QLUYCTVVPGGUBBOITN, Keys.INSTALLMENT__INSTALLMENT_CONTRACT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Installment as(String alias) {
        return new Installment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Installment rename(String name) {
        return new Installment(name, null);
    }
}
