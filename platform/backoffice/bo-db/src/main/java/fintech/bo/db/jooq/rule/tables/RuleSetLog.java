/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.rule.tables;


import fintech.bo.db.jooq.rule.Keys;
import fintech.bo.db.jooq.rule.Rule;
import fintech.bo.db.jooq.rule.tables.records.RuleSetLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleSetLog extends TableImpl<RuleSetLogRecord> {

    private static final long serialVersionUID = -290371787;

    /**
     * The reference instance of <code>rule.rule_set_log</code>
     */
    public static final RuleSetLog RULE_SET_LOG = new RuleSetLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleSetLogRecord> getRecordType() {
        return RuleSetLogRecord.class;
    }

    /**
     * The column <code>rule.rule_set_log.id</code>.
     */
    public final TableField<RuleSetLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('rule.rule_set_log_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rule.rule_set_log.created_at</code>.
     */
    public final TableField<RuleSetLogRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rule.rule_set_log.created_by</code>.
     */
    public final TableField<RuleSetLogRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_set_log.entity_version</code>.
     */
    public final TableField<RuleSetLogRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rule.rule_set_log.updated_at</code>.
     */
    public final TableField<RuleSetLogRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rule.rule_set_log.updated_by</code>.
     */
    public final TableField<RuleSetLogRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_set_log.application_id</code>.
     */
    public final TableField<RuleSetLogRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>rule.rule_set_log.client_id</code>.
     */
    public final TableField<RuleSetLogRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rule.rule_set_log.decision</code>.
     */
    public final TableField<RuleSetLogRecord, String> DECISION = createField("decision", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>rule.rule_set_log.executed_at</code>.
     */
    public final TableField<RuleSetLogRecord, LocalDateTime> EXECUTED_AT = createField("executed_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rule.rule_set_log.loan_id</code>.
     */
    public final TableField<RuleSetLogRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>rule.rule_set_log.reject_reason</code>.
     */
    public final TableField<RuleSetLogRecord, String> REJECT_REASON = createField("reject_reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_set_log.reject_reason_details</code>.
     */
    public final TableField<RuleSetLogRecord, String> REJECT_REASON_DETAILS = createField("reject_reason_details", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_set_log.rule_set</code>.
     */
    public final TableField<RuleSetLogRecord, String> RULE_SET = createField("rule_set", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>rule.rule_set_log</code> table reference
     */
    public RuleSetLog() {
        this("rule_set_log", null);
    }

    /**
     * Create an aliased <code>rule.rule_set_log</code> table reference
     */
    public RuleSetLog(String alias) {
        this(alias, RULE_SET_LOG);
    }

    private RuleSetLog(String alias, Table<RuleSetLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleSetLog(String alias, Table<RuleSetLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Rule.RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RuleSetLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_RULE_SET_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleSetLogRecord> getPrimaryKey() {
        return Keys.RULE_SET_LOG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleSetLogRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleSetLogRecord>>asList(Keys.RULE_SET_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleSetLog as(String alias) {
        return new RuleSetLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleSetLog rename(String name) {
        return new RuleSetLog(name, null);
    }
}
