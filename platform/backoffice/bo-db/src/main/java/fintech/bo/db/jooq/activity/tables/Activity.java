/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.activity.tables;


import fintech.bo.db.jooq.activity.Keys;
import fintech.bo.db.jooq.activity.tables.records.ActivityRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Activity extends TableImpl<ActivityRecord> {

    private static final long serialVersionUID = -267242545;

    /**
     * The reference instance of <code>activity.activity</code>
     */
    public static final Activity ACTIVITY_ = new Activity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActivityRecord> getRecordType() {
        return ActivityRecord.class;
    }

    /**
     * The column <code>activity.activity.id</code>.
     */
    public final TableField<ActivityRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>activity.activity.created_at</code>.
     */
    public final TableField<ActivityRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>activity.activity.created_by</code>.
     */
    public final TableField<ActivityRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.entity_version</code>.
     */
    public final TableField<ActivityRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>activity.activity.updated_at</code>.
     */
    public final TableField<ActivityRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>activity.activity.updated_by</code>.
     */
    public final TableField<ActivityRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.action</code>.
     */
    public final TableField<ActivityRecord, String> ACTION = createField("action", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>activity.activity.agent</code>.
     */
    public final TableField<ActivityRecord, String> AGENT = createField("agent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.application_id</code>.
     */
    public final TableField<ActivityRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>activity.activity.client_id</code>.
     */
    public final TableField<ActivityRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>activity.activity.comments</code>.
     */
    public final TableField<ActivityRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.debt_action_id</code>.
     */
    public final TableField<ActivityRecord, Long> DEBT_ACTION_ID = createField("debt_action_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>activity.activity.debt_id</code>.
     */
    public final TableField<ActivityRecord, Long> DEBT_ID = createField("debt_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>activity.activity.details</code>.
     */
    public final TableField<ActivityRecord, String> DETAILS = createField("details", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.loan_id</code>.
     */
    public final TableField<ActivityRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>activity.activity.payment_id</code>.
     */
    public final TableField<ActivityRecord, Long> PAYMENT_ID = createField("payment_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>activity.activity.resolution</code>.
     */
    public final TableField<ActivityRecord, String> RESOLUTION = createField("resolution", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.source</code>.
     */
    public final TableField<ActivityRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>activity.activity.task_id</code>.
     */
    public final TableField<ActivityRecord, Long> TASK_ID = createField("task_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>activity.activity.topic</code>.
     */
    public final TableField<ActivityRecord, String> TOPIC = createField("topic", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>activity.activity</code> table reference
     */
    public Activity() {
        this("activity", null);
    }

    /**
     * Create an aliased <code>activity.activity</code> table reference
     */
    public Activity(String alias) {
        this(alias, ACTIVITY_);
    }

    private Activity(String alias, Table<ActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private Activity(String alias, Table<ActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return fintech.bo.db.jooq.activity.Activity.ACTIVITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActivityRecord> getPrimaryKey() {
        return Keys.ACTIVITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActivityRecord>> getKeys() {
        return Arrays.<UniqueKey<ActivityRecord>>asList(Keys.ACTIVITY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Activity as(String alias) {
        return new Activity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Activity rename(String name) {
        return new Activity(name, null);
    }
}
