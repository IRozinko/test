/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.dc.tables;


import fintech.bo.db.jooq.dc.Dc;
import fintech.bo.db.jooq.dc.Keys;
import fintech.bo.db.jooq.dc.tables.records.DebtRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Debt extends TableImpl<DebtRecord> {

    private static final long serialVersionUID = 959217385;

    /**
     * The reference instance of <code>dc.debt</code>
     */
    public static final Debt DEBT = new Debt();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DebtRecord> getRecordType() {
        return DebtRecord.class;
    }

    /**
     * The column <code>dc.debt.id</code>.
     */
    public final TableField<DebtRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.debt.created_at</code>.
     */
    public final TableField<DebtRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.debt.created_by</code>.
     */
    public final TableField<DebtRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.entity_version</code>.
     */
    public final TableField<DebtRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.debt.updated_at</code>.
     */
    public final TableField<DebtRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.debt.updated_by</code>.
     */
    public final TableField<DebtRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.agent</code>.
     */
    public final TableField<DebtRecord, String> AGENT = createField("agent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.aging_bucket</code>.
     */
    public final TableField<DebtRecord, String> AGING_BUCKET = createField("aging_bucket", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt.auto_assignment_required</code>.
     */
    public final TableField<DebtRecord, Boolean> AUTO_ASSIGNMENT_REQUIRED = createField("auto_assignment_required", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>dc.debt.client_id</code>.
     */
    public final TableField<DebtRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.debt.dpd</code>.
     */
    public final TableField<DebtRecord, Integer> DPD = createField("dpd", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dc.debt.execute_at</code>.
     */
    public final TableField<DebtRecord, LocalDateTime> EXECUTE_AT = createField("execute_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>dc.debt.fee_due</code>.
     */
    public final TableField<DebtRecord, BigDecimal> FEE_DUE = createField("fee_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.fee_outstanding</code>.
     */
    public final TableField<DebtRecord, BigDecimal> FEE_OUTSTANDING = createField("fee_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.fee_paid</code>.
     */
    public final TableField<DebtRecord, BigDecimal> FEE_PAID = createField("fee_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.interest_due</code>.
     */
    public final TableField<DebtRecord, BigDecimal> INTEREST_DUE = createField("interest_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.interest_outstanding</code>.
     */
    public final TableField<DebtRecord, BigDecimal> INTEREST_OUTSTANDING = createField("interest_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.interest_paid</code>.
     */
    public final TableField<DebtRecord, BigDecimal> INTEREST_PAID = createField("interest_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.last_action</code>.
     */
    public final TableField<DebtRecord, String> LAST_ACTION = createField("last_action", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.last_action_at</code>.
     */
    public final TableField<DebtRecord, LocalDateTime> LAST_ACTION_AT = createField("last_action_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>dc.debt.last_executed_at</code>.
     */
    public final TableField<DebtRecord, LocalDateTime> LAST_EXECUTED_AT = createField("last_executed_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>dc.debt.last_execution_result</code>.
     */
    public final TableField<DebtRecord, String> LAST_EXECUTION_RESULT = createField("last_execution_result", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.last_paid</code>.
     */
    public final TableField<DebtRecord, BigDecimal> LAST_PAID = createField("last_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2), this, "");

    /**
     * The column <code>dc.debt.last_payment_date</code>.
     */
    public final TableField<DebtRecord, LocalDate> LAST_PAYMENT_DATE = createField("last_payment_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>dc.debt.loan_id</code>.
     */
    public final TableField<DebtRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.debt.loan_number</code>.
     */
    public final TableField<DebtRecord, String> LOAN_NUMBER = createField("loan_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt.loan_status</code>.
     */
    public final TableField<DebtRecord, String> LOAN_STATUS = createField("loan_status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt.loan_status_detail</code>.
     */
    public final TableField<DebtRecord, String> LOAN_STATUS_DETAIL = createField("loan_status_detail", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt.maturity_date</code>.
     */
    public final TableField<DebtRecord, LocalDate> MATURITY_DATE = createField("maturity_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>dc.debt.max_dpd</code>.
     */
    public final TableField<DebtRecord, Integer> MAX_DPD = createField("max_dpd", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dc.debt.next_action</code>.
     */
    public final TableField<DebtRecord, String> NEXT_ACTION = createField("next_action", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.next_action_at</code>.
     */
    public final TableField<DebtRecord, LocalDateTime> NEXT_ACTION_AT = createField("next_action_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>dc.debt.payment_due_date</code>.
     */
    public final TableField<DebtRecord, LocalDate> PAYMENT_DUE_DATE = createField("payment_due_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>dc.debt.penalty_due</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PENALTY_DUE = createField("penalty_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.penalty_outstanding</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PENALTY_OUTSTANDING = createField("penalty_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.penalty_paid</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PENALTY_PAID = createField("penalty_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.portfolio</code>.
     */
    public final TableField<DebtRecord, String> PORTFOLIO = createField("portfolio", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt.principal_due</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PRINCIPAL_DUE = createField("principal_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.principal_outstanding</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PRINCIPAL_OUTSTANDING = createField("principal_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.principal_paid</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PRINCIPAL_PAID = createField("principal_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.priority</code>.
     */
    public final TableField<DebtRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dc.debt.promise_amount</code>.
     */
    public final TableField<DebtRecord, BigDecimal> PROMISE_AMOUNT = createField("promise_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2), this, "");

    /**
     * The column <code>dc.debt.promise_due_date</code>.
     */
    public final TableField<DebtRecord, LocalDate> PROMISE_DUE_DATE = createField("promise_due_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>dc.debt.status</code>.
     */
    public final TableField<DebtRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt.total_due</code>.
     */
    public final TableField<DebtRecord, BigDecimal> TOTAL_DUE = createField("total_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.total_outstanding</code>.
     */
    public final TableField<DebtRecord, BigDecimal> TOTAL_OUTSTANDING = createField("total_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.total_paid</code>.
     */
    public final TableField<DebtRecord, BigDecimal> TOTAL_PAID = createField("total_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.debt.period_count</code>.
     */
    public final TableField<DebtRecord, Long> PERIOD_COUNT = createField("period_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>dc.debt.managing_company</code>.
     */
    public final TableField<DebtRecord, String> MANAGING_COMPANY = createField("managing_company", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.owning_company</code>.
     */
    public final TableField<DebtRecord, String> OWNING_COMPANY = createField("owning_company", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.sub_status</code>.
     */
    public final TableField<DebtRecord, String> SUB_STATUS = createField("sub_status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.batch_assignment_required</code>.
     */
    public final TableField<DebtRecord, Boolean> BATCH_ASSIGNMENT_REQUIRED = createField("batch_assignment_required", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>dc.debt.debt_status</code>.
     */
    public final TableField<DebtRecord, String> DEBT_STATUS = createField("debt_status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.debt_state</code>.
     */
    public final TableField<DebtRecord, String> DEBT_STATE = createField("debt_state", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt.debt_sub_status</code>.
     */
    public final TableField<DebtRecord, String> DEBT_SUB_STATUS = createField("debt_sub_status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>dc.debt</code> table reference
     */
    public Debt() {
        this("debt", null);
    }

    /**
     * Create an aliased <code>dc.debt</code> table reference
     */
    public Debt(String alias) {
        this(alias, DEBT);
    }

    private Debt(String alias, Table<DebtRecord> aliased) {
        this(alias, aliased, null);
    }

    private Debt(String alias, Table<DebtRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dc.DC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DebtRecord> getPrimaryKey() {
        return Keys.DEBT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DebtRecord>> getKeys() {
        return Arrays.<UniqueKey<DebtRecord>>asList(Keys.DEBT_PKEY, Keys.UK_C053GL0SKXQVJ93BDM77MGDF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Debt as(String alias) {
        return new Debt(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Debt rename(String name) {
        return new Debt(name, null);
    }
}
