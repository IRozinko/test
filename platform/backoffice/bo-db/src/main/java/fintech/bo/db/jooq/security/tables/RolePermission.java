/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.security.tables;


import fintech.bo.db.jooq.security.Keys;
import fintech.bo.db.jooq.security.Security;
import fintech.bo.db.jooq.security.tables.records.RolePermissionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RolePermission extends TableImpl<RolePermissionRecord> {

    private static final long serialVersionUID = 1370007762;

    /**
     * The reference instance of <code>security.role_permission</code>
     */
    public static final RolePermission ROLE_PERMISSION = new RolePermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RolePermissionRecord> getRecordType() {
        return RolePermissionRecord.class;
    }

    /**
     * The column <code>security.role_permission.role_id</code>.
     */
    public final TableField<RolePermissionRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>security.role_permission.permission_id</code>.
     */
    public final TableField<RolePermissionRecord, Long> PERMISSION_ID = createField("permission_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>security.role_permission</code> table reference
     */
    public RolePermission() {
        this("role_permission", null);
    }

    /**
     * Create an aliased <code>security.role_permission</code> table reference
     */
    public RolePermission(String alias) {
        this(alias, ROLE_PERMISSION);
    }

    private RolePermission(String alias, Table<RolePermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private RolePermission(String alias, Table<RolePermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Security.SECURITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RolePermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RolePermissionRecord, ?>>asList(Keys.ROLE_PERMISSION__FKA6JX8N8XKESMJMV6JQUG6BG68, Keys.ROLE_PERMISSION__FKF8YLLW1ECVWQY3EHYXAWQA1QP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RolePermission as(String alias) {
        return new RolePermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RolePermission rename(String name) {
        return new RolePermission(name, null);
    }
}
