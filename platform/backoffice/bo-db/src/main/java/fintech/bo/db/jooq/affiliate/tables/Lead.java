/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.affiliate.tables;


import fintech.bo.db.jooq.affiliate.Affiliate;
import fintech.bo.db.jooq.affiliate.Keys;
import fintech.bo.db.jooq.affiliate.tables.records.LeadRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Lead extends TableImpl<LeadRecord> {

    private static final long serialVersionUID = 226461295;

    /**
     * The reference instance of <code>affiliate.lead</code>
     */
    public static final Lead LEAD = new Lead();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LeadRecord> getRecordType() {
        return LeadRecord.class;
    }

    /**
     * The column <code>affiliate.lead.id</code>.
     */
    public final TableField<LeadRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>affiliate.lead.created_at</code>.
     */
    public final TableField<LeadRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>affiliate.lead.created_by</code>.
     */
    public final TableField<LeadRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.entity_version</code>.
     */
    public final TableField<LeadRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>affiliate.lead.updated_at</code>.
     */
    public final TableField<LeadRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>affiliate.lead.updated_by</code>.
     */
    public final TableField<LeadRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.affiliate_lead_id</code>.
     */
    public final TableField<LeadRecord, String> AFFILIATE_LEAD_ID = createField("affiliate_lead_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.affiliate_name</code>.
     */
    public final TableField<LeadRecord, String> AFFILIATE_NAME = createField("affiliate_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.application_id</code>.
     */
    public final TableField<LeadRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>affiliate.lead.campaign</code>.
     */
    public final TableField<LeadRecord, String> CAMPAIGN = createField("campaign", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.client_id</code>.
     */
    public final TableField<LeadRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>affiliate.lead.sub_affiliate_lead_id1</code>.
     */
    public final TableField<LeadRecord, String> SUB_AFFILIATE_LEAD_ID1 = createField("sub_affiliate_lead_id1", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.sub_affiliate_lead_id2</code>.
     */
    public final TableField<LeadRecord, String> SUB_AFFILIATE_LEAD_ID2 = createField("sub_affiliate_lead_id2", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.sub_affiliate_lead_id3</code>.
     */
    public final TableField<LeadRecord, String> SUB_AFFILIATE_LEAD_ID3 = createField("sub_affiliate_lead_id3", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>affiliate.lead.unknown_partner</code>.
     */
    public final TableField<LeadRecord, Boolean> UNKNOWN_PARTNER = createField("unknown_partner", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>affiliate.lead.partner_id</code>.
     */
    public final TableField<LeadRecord, Long> PARTNER_ID = createField("partner_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>affiliate.lead.repeated_client</code>.
     */
    public final TableField<LeadRecord, Boolean> REPEATED_CLIENT = createField("repeated_client", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>affiliate.lead</code> table reference
     */
    public Lead() {
        this("lead", null);
    }

    /**
     * Create an aliased <code>affiliate.lead</code> table reference
     */
    public Lead(String alias) {
        this(alias, LEAD);
    }

    private Lead(String alias, Table<LeadRecord> aliased) {
        this(alias, aliased, null);
    }

    private Lead(String alias, Table<LeadRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Affiliate.AFFILIATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LeadRecord> getPrimaryKey() {
        return Keys.LEAD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LeadRecord>> getKeys() {
        return Arrays.<UniqueKey<LeadRecord>>asList(Keys.LEAD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LeadRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LeadRecord, ?>>asList(Keys.LEAD__FK_LEAD_PARTNER_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Lead as(String alias) {
        return new Lead(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Lead rename(String name) {
        return new Lead(name, null);
    }
}
