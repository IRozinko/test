/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.dc.tables;


import fintech.bo.db.jooq.dc.Dc;
import fintech.bo.db.jooq.dc.Keys;
import fintech.bo.db.jooq.dc.tables.records.ActionRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Action extends TableImpl<ActionRecord> {

    private static final long serialVersionUID = -1214150072;

    /**
     * The reference instance of <code>dc.action</code>
     */
    public static final Action ACTION = new Action();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActionRecord> getRecordType() {
        return ActionRecord.class;
    }

    /**
     * The column <code>dc.action.id</code>.
     */
    public final TableField<ActionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.action.created_at</code>.
     */
    public final TableField<ActionRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.action.created_by</code>.
     */
    public final TableField<ActionRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.entity_version</code>.
     */
    public final TableField<ActionRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.action.updated_at</code>.
     */
    public final TableField<ActionRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.action.updated_by</code>.
     */
    public final TableField<ActionRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.action_name</code>.
     */
    public final TableField<ActionRecord, String> ACTION_NAME = createField("action_name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.action_status</code>.
     */
    public final TableField<ActionRecord, String> ACTION_STATUS = createField("action_status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.agent</code>.
     */
    public final TableField<ActionRecord, String> AGENT = createField("agent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.aging_bucket</code>.
     */
    public final TableField<ActionRecord, String> AGING_BUCKET = createField("aging_bucket", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.assigned_to_agent</code>.
     */
    public final TableField<ActionRecord, String> ASSIGNED_TO_AGENT = createField("assigned_to_agent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.client_id</code>.
     */
    public final TableField<ActionRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.action.comments</code>.
     */
    public final TableField<ActionRecord, String> COMMENTS = createField("comments", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.debt_status</code>.
     */
    public final TableField<ActionRecord, String> DEBT_STATUS = createField("debt_status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.debt_status_before</code>.
     */
    public final TableField<ActionRecord, String> DEBT_STATUS_BEFORE = createField("debt_status_before", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.dpd</code>.
     */
    public final TableField<ActionRecord, Integer> DPD = createField("dpd", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dc.action.fee_due</code>.
     */
    public final TableField<ActionRecord, BigDecimal> FEE_DUE = createField("fee_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.fee_outstanding</code>.
     */
    public final TableField<ActionRecord, BigDecimal> FEE_OUTSTANDING = createField("fee_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.fee_paid</code>.
     */
    public final TableField<ActionRecord, BigDecimal> FEE_PAID = createField("fee_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.interest_due</code>.
     */
    public final TableField<ActionRecord, BigDecimal> INTEREST_DUE = createField("interest_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.interest_outstanding</code>.
     */
    public final TableField<ActionRecord, BigDecimal> INTEREST_OUTSTANDING = createField("interest_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.interest_paid</code>.
     */
    public final TableField<ActionRecord, BigDecimal> INTEREST_PAID = createField("interest_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.loan_id</code>.
     */
    public final TableField<ActionRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.action.max_dpd</code>.
     */
    public final TableField<ActionRecord, Integer> MAX_DPD = createField("max_dpd", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dc.action.next_action</code>.
     */
    public final TableField<ActionRecord, String> NEXT_ACTION = createField("next_action", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.next_action_at</code>.
     */
    public final TableField<ActionRecord, LocalDateTime> NEXT_ACTION_AT = createField("next_action_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>dc.action.penalty_due</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PENALTY_DUE = createField("penalty_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.penalty_outstanding</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PENALTY_OUTSTANDING = createField("penalty_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.penalty_paid</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PENALTY_PAID = createField("penalty_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.portfolio</code>.
     */
    public final TableField<ActionRecord, String> PORTFOLIO = createField("portfolio", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.portfolio_before</code>.
     */
    public final TableField<ActionRecord, String> PORTFOLIO_BEFORE = createField("portfolio_before", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.action.principal_due</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PRINCIPAL_DUE = createField("principal_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.principal_outstanding</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PRINCIPAL_OUTSTANDING = createField("principal_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.principal_paid</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PRINCIPAL_PAID = createField("principal_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.priority</code>.
     */
    public final TableField<ActionRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>dc.action.promise_amount</code>.
     */
    public final TableField<ActionRecord, BigDecimal> PROMISE_AMOUNT = createField("promise_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2), this, "");

    /**
     * The column <code>dc.action.promise_due_date</code>.
     */
    public final TableField<ActionRecord, LocalDate> PROMISE_DUE_DATE = createField("promise_due_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>dc.action.resolution</code>.
     */
    public final TableField<ActionRecord, String> RESOLUTION = createField("resolution", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.total_due</code>.
     */
    public final TableField<ActionRecord, BigDecimal> TOTAL_DUE = createField("total_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.total_outstanding</code>.
     */
    public final TableField<ActionRecord, BigDecimal> TOTAL_OUTSTANDING = createField("total_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.total_paid</code>.
     */
    public final TableField<ActionRecord, BigDecimal> TOTAL_PAID = createField("total_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>dc.action.debt_id</code>.
     */
    public final TableField<ActionRecord, Long> DEBT_ID = createField("debt_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.action.managing_company_before</code>.
     */
    public final TableField<ActionRecord, String> MANAGING_COMPANY_BEFORE = createField("managing_company_before", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.managing_company_after</code>.
     */
    public final TableField<ActionRecord, String> MANAGING_COMPANY_AFTER = createField("managing_company_after", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.owning_company_before</code>.
     */
    public final TableField<ActionRecord, String> OWNING_COMPANY_BEFORE = createField("owning_company_before", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.action.owning_company_after</code>.
     */
    public final TableField<ActionRecord, String> OWNING_COMPANY_AFTER = createField("owning_company_after", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>dc.action</code> table reference
     */
    public Action() {
        this("action", null);
    }

    /**
     * Create an aliased <code>dc.action</code> table reference
     */
    public Action(String alias) {
        this(alias, ACTION);
    }

    private Action(String alias, Table<ActionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Action(String alias, Table<ActionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dc.DC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActionRecord> getPrimaryKey() {
        return Keys.ACTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActionRecord>> getKeys() {
        return Arrays.<UniqueKey<ActionRecord>>asList(Keys.ACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ActionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActionRecord, ?>>asList(Keys.ACTION__FKFK0TOX5YV4PRL8Q7EGM6LQLSX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Action as(String alias) {
        return new Action(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Action rename(String name) {
        return new Action(name, null);
    }
}
