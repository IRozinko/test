/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.dc.tables;


import fintech.bo.db.jooq.dc.Dc;
import fintech.bo.db.jooq.dc.Keys;
import fintech.bo.db.jooq.dc.tables.records.DebtImportRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DebtImport extends TableImpl<DebtImportRecord> {

    private static final long serialVersionUID = 767090470;

    /**
     * The reference instance of <code>dc.debt_import</code>
     */
    public static final DebtImport DEBT_IMPORT = new DebtImport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DebtImportRecord> getRecordType() {
        return DebtImportRecord.class;
    }

    /**
     * The column <code>dc.debt_import.id</code>.
     */
    public final TableField<DebtImportRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.debt_import.created_at</code>.
     */
    public final TableField<DebtImportRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.debt_import.created_by</code>.
     */
    public final TableField<DebtImportRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt_import.entity_version</code>.
     */
    public final TableField<DebtImportRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>dc.debt_import.updated_at</code>.
     */
    public final TableField<DebtImportRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>dc.debt_import.updated_by</code>.
     */
    public final TableField<DebtImportRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt_import.name</code>.
     */
    public final TableField<DebtImportRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>dc.debt_import.debt_import_format</code>.
     */
    public final TableField<DebtImportRecord, String> DEBT_IMPORT_FORMAT = createField("debt_import_format", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>dc.debt_import.disabled</code>.
     */
    public final TableField<DebtImportRecord, Boolean> DISABLED = createField("disabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>dc.debt_import.code</code>.
     */
    public final TableField<DebtImportRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>dc.debt_import</code> table reference
     */
    public DebtImport() {
        this("debt_import", null);
    }

    /**
     * Create an aliased <code>dc.debt_import</code> table reference
     */
    public DebtImport(String alias) {
        this(alias, DEBT_IMPORT);
    }

    private DebtImport(String alias, Table<DebtImportRecord> aliased) {
        this(alias, aliased, null);
    }

    private DebtImport(String alias, Table<DebtImportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Dc.DC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DebtImportRecord> getPrimaryKey() {
        return Keys.DEBT_IMPORT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DebtImportRecord>> getKeys() {
        return Arrays.<UniqueKey<DebtImportRecord>>asList(Keys.DEBT_IMPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DebtImport as(String alias) {
        return new DebtImport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DebtImport rename(String name) {
        return new DebtImport(name, null);
    }
}
