/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.lending.tables;


import fintech.bo.db.jooq.lending.Keys;
import fintech.bo.db.jooq.lending.Lending;
import fintech.bo.db.jooq.lending.tables.records.PeriodRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Period extends TableImpl<PeriodRecord> {

    private static final long serialVersionUID = 1386619770;

    /**
     * The reference instance of <code>lending.period</code>
     */
    public static final Period PERIOD = new Period();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PeriodRecord> getRecordType() {
        return PeriodRecord.class;
    }

    /**
     * The column <code>lending.period.id</code>.
     */
    public final TableField<PeriodRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.period.created_at</code>.
     */
    public final TableField<PeriodRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.period.created_by</code>.
     */
    public final TableField<PeriodRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.period.entity_version</code>.
     */
    public final TableField<PeriodRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.period.updated_at</code>.
     */
    public final TableField<PeriodRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.period.updated_by</code>.
     */
    public final TableField<PeriodRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.period.close_date</code>.
     */
    public final TableField<PeriodRecord, LocalDate> CLOSE_DATE = createField("close_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.period.closing_ended_at</code>.
     */
    public final TableField<PeriodRecord, LocalDateTime> CLOSING_ENDED_AT = createField("closing_ended_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>lending.period.closing_started_at</code>.
     */
    public final TableField<PeriodRecord, LocalDateTime> CLOSING_STARTED_AT = createField("closing_started_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>lending.period.period_date</code>.
     */
    public final TableField<PeriodRecord, LocalDate> PERIOD_DATE = createField("period_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.period.result_log</code>.
     */
    public final TableField<PeriodRecord, String> RESULT_LOG = createField("result_log", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.period.status</code>.
     */
    public final TableField<PeriodRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.period.status_detail</code>.
     */
    public final TableField<PeriodRecord, String> STATUS_DETAIL = createField("status_detail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>lending.period</code> table reference
     */
    public Period() {
        this("period", null);
    }

    /**
     * Create an aliased <code>lending.period</code> table reference
     */
    public Period(String alias) {
        this(alias, PERIOD);
    }

    private Period(String alias, Table<PeriodRecord> aliased) {
        this(alias, aliased, null);
    }

    private Period(String alias, Table<PeriodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lending.LENDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PeriodRecord> getPrimaryKey() {
        return Keys.PERIOD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PeriodRecord>> getKeys() {
        return Arrays.<UniqueKey<PeriodRecord>>asList(Keys.PERIOD_PKEY, Keys.UK_2EB5CL6CJLR0WXQ8A5098RQXB);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Period as(String alias) {
        return new Period(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Period rename(String name) {
        return new Period(name, null);
    }
}
