/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.ClientRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Client extends TableImpl<ClientRecord> {

    private static final long serialVersionUID = -978265753;

    /**
     * The reference instance of <code>crm.client</code>
     */
    public static final Client CLIENT = new Client();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClientRecord> getRecordType() {
        return ClientRecord.class;
    }

    /**
     * The column <code>crm.client.id</code>.
     */
    public final TableField<ClientRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.client.created_at</code>.
     */
    public final TableField<ClientRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.client.created_by</code>.
     */
    public final TableField<ClientRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.entity_version</code>.
     */
    public final TableField<ClientRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.client.updated_at</code>.
     */
    public final TableField<ClientRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.client.updated_by</code>.
     */
    public final TableField<ClientRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.accept_marketing</code>.
     */
    public final TableField<ClientRecord, Boolean> ACCEPT_MARKETING = createField("accept_marketing", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.client.accept_terms</code>.
     */
    public final TableField<ClientRecord, Boolean> ACCEPT_TERMS = createField("accept_terms", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.client.accept_verification</code>.
     */
    public final TableField<ClientRecord, Boolean> ACCEPT_VERIFICATION = createField("accept_verification", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.client.account_number</code>.
     */
    public final TableField<ClientRecord, String> ACCOUNT_NUMBER = createField("account_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.date_of_birth</code>.
     */
    public final TableField<ClientRecord, LocalDate> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>crm.client.document_number</code>.
     */
    public final TableField<ClientRecord, String> DOCUMENT_NUMBER = createField("document_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.first_name</code>.
     */
    public final TableField<ClientRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.gender</code>.
     */
    public final TableField<ClientRecord, String> GENDER = createField("gender", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.last_name</code>.
     */
    public final TableField<ClientRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.maiden_name</code>.
     */
    public final TableField<ClientRecord, String> MAIDEN_NAME = createField("maiden_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.client_number</code>.
     */
    public final TableField<ClientRecord, String> CLIENT_NUMBER = createField("client_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.client.phone</code>.
     */
    public final TableField<ClientRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.second_first_name</code>.
     */
    public final TableField<ClientRecord, String> SECOND_FIRST_NAME = createField("second_first_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.second_last_name</code>.
     */
    public final TableField<ClientRecord, String> SECOND_LAST_NAME = createField("second_last_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.segments_text</code>.
     */
    public final TableField<ClientRecord, String> SEGMENTS_TEXT = createField("segments_text", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.accept_privacy_policy</code>.
     */
    public final TableField<ClientRecord, Boolean> ACCEPT_PRIVACY_POLICY = createField("accept_privacy_policy", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.client.block_communication</code>.
     */
    public final TableField<ClientRecord, Boolean> BLOCK_COMMUNICATION = createField("block_communication", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.client.excluded_from_asnef</code>.
     */
    public final TableField<ClientRecord, Boolean> EXCLUDED_FROM_ASNEF = createField("excluded_from_asnef", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.client.transferred_to_loc</code>.
     */
    public final TableField<ClientRecord, Boolean> TRANSFERRED_TO_LOC = createField("transferred_to_loc", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.client.deleted</code>.
     */
    public final TableField<ClientRecord, Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.client.title</code>.
     */
    public final TableField<ClientRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.client.locale</code>.
     */
    public final TableField<ClientRecord, String> LOCALE = createField("locale", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.field("'es'::text", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * Create a <code>crm.client</code> table reference
     */
    public Client() {
        this("client", null);
    }

    /**
     * Create an aliased <code>crm.client</code> table reference
     */
    public Client(String alias) {
        this(alias, CLIENT);
    }

    private Client(String alias, Table<ClientRecord> aliased) {
        this(alias, aliased, null);
    }

    private Client(String alias, Table<ClientRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClientRecord> getPrimaryKey() {
        return Keys.CLIENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClientRecord>> getKeys() {
        return Arrays.<UniqueKey<ClientRecord>>asList(Keys.CLIENT_PKEY, Keys.UK_ND3IV3VIWO4NL1N6WQ5WSJAFQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Client as(String alias) {
        return new Client(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Client rename(String name) {
        return new Client(name, null);
    }
}
