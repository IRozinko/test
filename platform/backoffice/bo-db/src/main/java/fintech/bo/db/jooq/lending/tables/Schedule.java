/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.lending.tables;


import fintech.bo.db.jooq.lending.Keys;
import fintech.bo.db.jooq.lending.Lending;
import fintech.bo.db.jooq.lending.tables.records.ScheduleRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Schedule extends TableImpl<ScheduleRecord> {

    private static final long serialVersionUID = 469788917;

    /**
     * The reference instance of <code>lending.schedule</code>
     */
    public static final Schedule SCHEDULE = new Schedule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScheduleRecord> getRecordType() {
        return ScheduleRecord.class;
    }

    /**
     * The column <code>lending.schedule.id</code>.
     */
    public final TableField<ScheduleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.created_at</code>.
     */
    public final TableField<ScheduleRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.created_by</code>.
     */
    public final TableField<ScheduleRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.schedule.entity_version</code>.
     */
    public final TableField<ScheduleRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.updated_at</code>.
     */
    public final TableField<ScheduleRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.updated_by</code>.
     */
    public final TableField<ScheduleRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.schedule.client_id</code>.
     */
    public final TableField<ScheduleRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.close_loan_on_paid</code>.
     */
    public final TableField<ScheduleRecord, Boolean> CLOSE_LOAN_ON_PAID = createField("close_loan_on_paid", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.extension_period_count</code>.
     */
    public final TableField<ScheduleRecord, Long> EXTENSION_PERIOD_COUNT = createField("extension_period_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.extension_period_unit</code>.
     */
    public final TableField<ScheduleRecord, String> EXTENSION_PERIOD_UNIT = createField("extension_period_unit", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.schedule.grace_period_in_days</code>.
     */
    public final TableField<ScheduleRecord, Long> GRACE_PERIOD_IN_DAYS = createField("grace_period_in_days", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.installments</code>.
     */
    public final TableField<ScheduleRecord, Long> INSTALLMENTS = createField("installments", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.invoice_applied_fees</code>.
     */
    public final TableField<ScheduleRecord, Boolean> INVOICE_APPLIED_FEES = createField("invoice_applied_fees", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.invoice_applied_interest</code>.
     */
    public final TableField<ScheduleRecord, Boolean> INVOICE_APPLIED_INTEREST = createField("invoice_applied_interest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.invoice_applied_penalty</code>.
     */
    public final TableField<ScheduleRecord, Boolean> INVOICE_APPLIED_PENALTY = createField("invoice_applied_penalty", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.latest</code>.
     */
    public final TableField<ScheduleRecord, Boolean> LATEST = createField("latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.maturity_date</code>.
     */
    public final TableField<ScheduleRecord, LocalDate> MATURITY_DATE = createField("maturity_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.period_count</code>.
     */
    public final TableField<ScheduleRecord, Long> PERIOD_COUNT = createField("period_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.period_unit</code>.
     */
    public final TableField<ScheduleRecord, String> PERIOD_UNIT = createField("period_unit", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.previous_payment_schedule_id</code>.
     */
    public final TableField<ScheduleRecord, Long> PREVIOUS_PAYMENT_SCHEDULE_ID = createField("previous_payment_schedule_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.schedule.base_overdue_days</code>.
     */
    public final TableField<ScheduleRecord, Long> BASE_OVERDUE_DAYS = createField("base_overdue_days", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.source_transaction_id</code>.
     */
    public final TableField<ScheduleRecord, Long> SOURCE_TRANSACTION_ID = createField("source_transaction_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.source_transaction_type</code>.
     */
    public final TableField<ScheduleRecord, String> SOURCE_TRANSACTION_TYPE = createField("source_transaction_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.start_date</code>.
     */
    public final TableField<ScheduleRecord, LocalDate> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.schedule.loan_id</code>.
     */
    public final TableField<ScheduleRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>lending.schedule</code> table reference
     */
    public Schedule() {
        this("schedule", null);
    }

    /**
     * Create an aliased <code>lending.schedule</code> table reference
     */
    public Schedule(String alias) {
        this(alias, SCHEDULE);
    }

    private Schedule(String alias, Table<ScheduleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Schedule(String alias, Table<ScheduleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lending.LENDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScheduleRecord> getPrimaryKey() {
        return Keys.SCHEDULE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScheduleRecord>> getKeys() {
        return Arrays.<UniqueKey<ScheduleRecord>>asList(Keys.SCHEDULE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ScheduleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScheduleRecord, ?>>asList(Keys.SCHEDULE__FK5RB7TYGSTXPLVW0A6VEEUPFQQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schedule as(String alias) {
        return new Schedule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Schedule rename(String name) {
        return new Schedule(name, null);
    }
}
