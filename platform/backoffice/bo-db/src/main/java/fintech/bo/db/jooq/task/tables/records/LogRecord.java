/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.task.tables.records;


import fintech.bo.db.jooq.task.tables.Log;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record16;
import org.jooq.Row16;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogRecord extends UpdatableRecordImpl<LogRecord> implements Record16<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, LocalDateTime, LocalDateTime, String, String, String, String, String, Long> {

    private static final long serialVersionUID = -790625082;

    /**
     * Setter for <code>task.log.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>task.log.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>task.log.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>task.log.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>task.log.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>task.log.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>task.log.entity_version</code>.
     */
    public void setEntityVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>task.log.entity_version</code>.
     */
    public Long getEntityVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>task.log.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>task.log.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>task.log.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>task.log.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>task.log.agent</code>.
     */
    public void setAgent(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>task.log.agent</code>.
     */
    public String getAgent() {
        return (String) get(6);
    }

    /**
     * Setter for <code>task.log.comment</code>.
     */
    public void setComment(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>task.log.comment</code>.
     */
    public String getComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>task.log.due_at</code>.
     */
    public void setDueAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>task.log.due_at</code>.
     */
    public LocalDateTime getDueAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>task.log.expires_at</code>.
     */
    public void setExpiresAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>task.log.expires_at</code>.
     */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>task.log.operation</code>.
     */
    public void setOperation(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>task.log.operation</code>.
     */
    public String getOperation() {
        return (String) get(10);
    }

    /**
     * Setter for <code>task.log.reason</code>.
     */
    public void setReason(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>task.log.reason</code>.
     */
    public String getReason() {
        return (String) get(11);
    }

    /**
     * Setter for <code>task.log.resolution</code>.
     */
    public void setResolution(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>task.log.resolution</code>.
     */
    public String getResolution() {
        return (String) get(12);
    }

    /**
     * Setter for <code>task.log.resolution_detail</code>.
     */
    public void setResolutionDetail(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>task.log.resolution_detail</code>.
     */
    public String getResolutionDetail() {
        return (String) get(13);
    }

    /**
     * Setter for <code>task.log.resolution_sub_detail</code>.
     */
    public void setResolutionSubDetail(String value) {
        set(14, value);
    }

    /**
     * Getter for <code>task.log.resolution_sub_detail</code>.
     */
    public String getResolutionSubDetail() {
        return (String) get(14);
    }

    /**
     * Setter for <code>task.log.task_id</code>.
     */
    public void setTaskId(Long value) {
        set(15, value);
    }

    /**
     * Getter for <code>task.log.task_id</code>.
     */
    public Long getTaskId() {
        return (Long) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record16 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, LocalDateTime, LocalDateTime, String, String, String, String, String, Long> fieldsRow() {
        return (Row16) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row16<Long, LocalDateTime, String, Long, LocalDateTime, String, String, String, LocalDateTime, LocalDateTime, String, String, String, String, String, Long> valuesRow() {
        return (Row16) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Log.LOG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return Log.LOG.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Log.LOG.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return Log.LOG.ENTITY_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return Log.LOG.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Log.LOG.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Log.LOG.AGENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Log.LOG.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field9() {
        return Log.LOG.DUE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field10() {
        return Log.LOG.EXPIRES_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field11() {
        return Log.LOG.OPERATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field12() {
        return Log.LOG.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return Log.LOG.RESOLUTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return Log.LOG.RESOLUTION_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field15() {
        return Log.LOG.RESOLUTION_SUB_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field16() {
        return Log.LOG.TASK_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getEntityVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAgent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value9() {
        return getDueAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value10() {
        return getExpiresAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value11() {
        return getOperation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value12() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getResolution();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getResolutionDetail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value15() {
        return getResolutionSubDetail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value16() {
        return getTaskId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value4(Long value) {
        setEntityVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value7(String value) {
        setAgent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value8(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value9(LocalDateTime value) {
        setDueAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value10(LocalDateTime value) {
        setExpiresAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value11(String value) {
        setOperation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value12(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value13(String value) {
        setResolution(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value14(String value) {
        setResolutionDetail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value15(String value) {
        setResolutionSubDetail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value16(Long value) {
        setTaskId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord values(Long value1, LocalDateTime value2, String value3, Long value4, LocalDateTime value5, String value6, String value7, String value8, LocalDateTime value9, LocalDateTime value10, String value11, String value12, String value13, String value14, String value15, Long value16) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogRecord
     */
    public LogRecord() {
        super(Log.LOG);
    }

    /**
     * Create a detached, initialised LogRecord
     */
    public LogRecord(Long id, LocalDateTime createdAt, String createdBy, Long entityVersion, LocalDateTime updatedAt, String updatedBy, String agent, String comment, LocalDateTime dueAt, LocalDateTime expiresAt, String operation, String reason, String resolution, String resolutionDetail, String resolutionSubDetail, Long taskId) {
        super(Log.LOG);

        set(0, id);
        set(1, createdAt);
        set(2, createdBy);
        set(3, entityVersion);
        set(4, updatedAt);
        set(5, updatedBy);
        set(6, agent);
        set(7, comment);
        set(8, dueAt);
        set(9, expiresAt);
        set(10, operation);
        set(11, reason);
        set(12, resolution);
        set(13, resolutionDetail);
        set(14, resolutionSubDetail);
        set(15, taskId);
    }
}
