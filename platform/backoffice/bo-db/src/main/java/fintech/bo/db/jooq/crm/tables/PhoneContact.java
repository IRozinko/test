/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.PhoneContactRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhoneContact extends TableImpl<PhoneContactRecord> {

    private static final long serialVersionUID = -1985830390;

    /**
     * The reference instance of <code>crm.phone_contact</code>
     */
    public static final PhoneContact PHONE_CONTACT = new PhoneContact();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PhoneContactRecord> getRecordType() {
        return PhoneContactRecord.class;
    }

    /**
     * The column <code>crm.phone_contact.id</code>.
     */
    public final TableField<PhoneContactRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.created_at</code>.
     */
    public final TableField<PhoneContactRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.created_by</code>.
     */
    public final TableField<PhoneContactRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.phone_contact.entity_version</code>.
     */
    public final TableField<PhoneContactRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.updated_at</code>.
     */
    public final TableField<PhoneContactRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.updated_by</code>.
     */
    public final TableField<PhoneContactRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.phone_contact.country_code</code>.
     */
    public final TableField<PhoneContactRecord, String> COUNTRY_CODE = createField("country_code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.local_number</code>.
     */
    public final TableField<PhoneContactRecord, String> LOCAL_NUMBER = createField("local_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.phone_type</code>.
     */
    public final TableField<PhoneContactRecord, String> PHONE_TYPE = createField("phone_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.is_primary</code>.
     */
    public final TableField<PhoneContactRecord, Boolean> IS_PRIMARY = createField("is_primary", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.verified</code>.
     */
    public final TableField<PhoneContactRecord, Boolean> VERIFIED = createField("verified", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.verified_at</code>.
     */
    public final TableField<PhoneContactRecord, LocalDateTime> VERIFIED_AT = createField("verified_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>crm.phone_contact.client_id</code>.
     */
    public final TableField<PhoneContactRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.active</code>.
     */
    public final TableField<PhoneContactRecord, Boolean> ACTIVE = createField("active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>crm.phone_contact.active_till</code>.
     */
    public final TableField<PhoneContactRecord, LocalDate> ACTIVE_TILL = createField("active_till", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>crm.phone_contact.source</code>.
     */
    public final TableField<PhoneContactRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.phone_contact.legal_consent</code>.
     */
    public final TableField<PhoneContactRecord, Boolean> LEGAL_CONSENT = createField("legal_consent", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>crm.phone_contact</code> table reference
     */
    public PhoneContact() {
        this("phone_contact", null);
    }

    /**
     * Create an aliased <code>crm.phone_contact</code> table reference
     */
    public PhoneContact(String alias) {
        this(alias, PHONE_CONTACT);
    }

    private PhoneContact(String alias, Table<PhoneContactRecord> aliased) {
        this(alias, aliased, null);
    }

    private PhoneContact(String alias, Table<PhoneContactRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PhoneContactRecord> getPrimaryKey() {
        return Keys.PHONE_CONTACT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PhoneContactRecord>> getKeys() {
        return Arrays.<UniqueKey<PhoneContactRecord>>asList(Keys.PHONE_CONTACT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PhoneContactRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PhoneContactRecord, ?>>asList(Keys.PHONE_CONTACT__FK_PHONE_CONTACT_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhoneContact as(String alias) {
        return new PhoneContact(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PhoneContact rename(String name) {
        return new PhoneContact(name, null);
    }
}
