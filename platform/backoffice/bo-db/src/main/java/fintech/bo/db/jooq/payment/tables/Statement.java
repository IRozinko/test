/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.payment.tables;


import fintech.bo.db.jooq.payment.Keys;
import fintech.bo.db.jooq.payment.Payment;
import fintech.bo.db.jooq.payment.tables.records.StatementRecord;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Statement extends TableImpl<StatementRecord> {

    private static final long serialVersionUID = -266897790;

    /**
     * The reference instance of <code>payment.statement</code>
     */
    public static final Statement STATEMENT = new Statement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatementRecord> getRecordType() {
        return StatementRecord.class;
    }

    /**
     * The column <code>payment.statement.id</code>.
     */
    public final TableField<StatementRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.statement.created_at</code>.
     */
    public final TableField<StatementRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payment.statement.created_by</code>.
     */
    public final TableField<StatementRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement.entity_version</code>.
     */
    public final TableField<StatementRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.statement.updated_at</code>.
     */
    public final TableField<StatementRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payment.statement.updated_by</code>.
     */
    public final TableField<StatementRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement.account_number</code>.
     */
    public final TableField<StatementRecord, String> ACCOUNT_NUMBER = createField("account_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement.end_date</code>.
     */
    public final TableField<StatementRecord, LocalDate> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>payment.statement.error</code>.
     */
    public final TableField<StatementRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement.file_id</code>.
     */
    public final TableField<StatementRecord, Long> FILE_ID = createField("file_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.statement.file_name</code>.
     */
    public final TableField<StatementRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement.format</code>.
     */
    public final TableField<StatementRecord, String> FORMAT = createField("format", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement.institution_id</code>.
     */
    public final TableField<StatementRecord, Long> INSTITUTION_ID = createField("institution_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.statement.start_date</code>.
     */
    public final TableField<StatementRecord, LocalDate> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>payment.statement.status</code>.
     */
    public final TableField<StatementRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>payment.statement</code> table reference
     */
    public Statement() {
        this("statement", null);
    }

    /**
     * Create an aliased <code>payment.statement</code> table reference
     */
    public Statement(String alias) {
        this(alias, STATEMENT);
    }

    private Statement(String alias, Table<StatementRecord> aliased) {
        this(alias, aliased, null);
    }

    private Statement(String alias, Table<StatementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Payment.PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatementRecord> getPrimaryKey() {
        return Keys.STATEMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatementRecord>> getKeys() {
        return Arrays.<UniqueKey<StatementRecord>>asList(Keys.STATEMENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StatementRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatementRecord, ?>>asList(Keys.STATEMENT__FK_STATEMENT_INSTITUTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Statement as(String alias) {
        return new Statement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Statement rename(String name) {
        return new Statement(name, null);
    }
}
