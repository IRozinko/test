/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.alfa.tables;


import fintech.bo.db.jooq.alfa.Alfa;
import fintech.bo.db.jooq.alfa.Keys;
import fintech.bo.db.jooq.alfa.tables.records.LocBatchRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LocBatch extends TableImpl<LocBatchRecord> {

    private static final long serialVersionUID = -425392286;

    /**
     * The reference instance of <code>alfa.loc_batch</code>
     */
    public static final LocBatch LOC_BATCH = new LocBatch();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LocBatchRecord> getRecordType() {
        return LocBatchRecord.class;
    }

    /**
     * The column <code>alfa.loc_batch.id</code>.
     */
    public final TableField<LocBatchRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.created_at</code>.
     */
    public final TableField<LocBatchRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.created_by</code>.
     */
    public final TableField<LocBatchRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>alfa.loc_batch.entity_version</code>.
     */
    public final TableField<LocBatchRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.updated_at</code>.
     */
    public final TableField<LocBatchRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.updated_by</code>.
     */
    public final TableField<LocBatchRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>alfa.loc_batch.client_id</code>.
     */
    public final TableField<LocBatchRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.batch_number</code>.
     */
    public final TableField<LocBatchRecord, Long> BATCH_NUMBER = createField("batch_number", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.status</code>.
     */
    public final TableField<LocBatchRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>alfa.loc_batch.client_number</code>.
     */
    public final TableField<LocBatchRecord, String> CLIENT_NUMBER = createField("client_number", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaultValue(org.jooq.impl.DSL.field("''::text", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>alfa.loc_batch.application_id</code>.
     */
    public final TableField<LocBatchRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>alfa.loc_batch.status_detail</code>.
     */
    public final TableField<LocBatchRecord, String> STATUS_DETAIL = createField("status_detail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>alfa.loc_batch</code> table reference
     */
    public LocBatch() {
        this("loc_batch", null);
    }

    /**
     * Create an aliased <code>alfa.loc_batch</code> table reference
     */
    public LocBatch(String alias) {
        this(alias, LOC_BATCH);
    }

    private LocBatch(String alias, Table<LocBatchRecord> aliased) {
        this(alias, aliased, null);
    }

    private LocBatch(String alias, Table<LocBatchRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Alfa.ALFA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LocBatchRecord> getPrimaryKey() {
        return Keys.LOC_BATCH_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LocBatchRecord>> getKeys() {
        return Arrays.<UniqueKey<LocBatchRecord>>asList(Keys.LOC_BATCH_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocBatch as(String alias) {
        return new LocBatch(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LocBatch rename(String name) {
        return new LocBatch(name, null);
    }
}
