/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.payment.tables;


import fintech.bo.db.jooq.payment.Keys;
import fintech.bo.db.jooq.payment.Payment;
import fintech.bo.db.jooq.payment.tables.records.DisbursementRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Disbursement extends TableImpl<DisbursementRecord> {

    private static final long serialVersionUID = -1730413523;

    /**
     * The reference instance of <code>payment.disbursement</code>
     */
    public static final Disbursement DISBURSEMENT = new Disbursement();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DisbursementRecord> getRecordType() {
        return DisbursementRecord.class;
    }

    /**
     * The column <code>payment.disbursement.id</code>.
     */
    public final TableField<DisbursementRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.created_at</code>.
     */
    public final TableField<DisbursementRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.created_by</code>.
     */
    public final TableField<DisbursementRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.disbursement.entity_version</code>.
     */
    public final TableField<DisbursementRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.updated_at</code>.
     */
    public final TableField<DisbursementRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.updated_by</code>.
     */
    public final TableField<DisbursementRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.disbursement.amount</code>.
     */
    public final TableField<DisbursementRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.client_id</code>.
     */
    public final TableField<DisbursementRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.disbursement.error</code>.
     */
    public final TableField<DisbursementRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.disbursement.exported_at</code>.
     */
    public final TableField<DisbursementRecord, LocalDateTime> EXPORTED_AT = createField("exported_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>payment.disbursement.exported_cloud_file_id</code>.
     */
    public final TableField<DisbursementRecord, Long> EXPORTED_CLOUD_FILE_ID = createField("exported_cloud_file_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.disbursement.exported_file_name</code>.
     */
    public final TableField<DisbursementRecord, String> EXPORTED_FILE_NAME = createField("exported_file_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.disbursement.institution_account_id</code>.
     */
    public final TableField<DisbursementRecord, Long> INSTITUTION_ACCOUNT_ID = createField("institution_account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.disbursement.institution_id</code>.
     */
    public final TableField<DisbursementRecord, Long> INSTITUTION_ID = createField("institution_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.disbursement.loan_id</code>.
     */
    public final TableField<DisbursementRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.disbursement.reference</code>.
     */
    public final TableField<DisbursementRecord, String> REFERENCE = createField("reference", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.settled_at</code>.
     */
    public final TableField<DisbursementRecord, LocalDateTime> SETTLED_AT = createField("settled_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>payment.disbursement.status</code>.
     */
    public final TableField<DisbursementRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.status_detail</code>.
     */
    public final TableField<DisbursementRecord, String> STATUS_DETAIL = createField("status_detail", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.value_date</code>.
     */
    public final TableField<DisbursementRecord, LocalDate> VALUE_DATE = createField("value_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>payment.disbursement.application_id</code>.
     */
    public final TableField<DisbursementRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>payment.disbursement.disbursement_type</code>.
     */
    public final TableField<DisbursementRecord, String> DISBURSEMENT_TYPE = createField("disbursement_type", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaultValue(org.jooq.impl.DSL.field("'PRINCIPAL'::text", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>payment.disbursement.api_export</code>.
     */
    public final TableField<DisbursementRecord, Boolean> API_EXPORT = createField("api_export", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>payment.disbursement</code> table reference
     */
    public Disbursement() {
        this("disbursement", null);
    }

    /**
     * Create an aliased <code>payment.disbursement</code> table reference
     */
    public Disbursement(String alias) {
        this(alias, DISBURSEMENT);
    }

    private Disbursement(String alias, Table<DisbursementRecord> aliased) {
        this(alias, aliased, null);
    }

    private Disbursement(String alias, Table<DisbursementRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Payment.PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DisbursementRecord> getPrimaryKey() {
        return Keys.DISBURSEMENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DisbursementRecord>> getKeys() {
        return Arrays.<UniqueKey<DisbursementRecord>>asList(Keys.DISBURSEMENT_PKEY, Keys.PAYMENT_DISBURSEMENT_REFERENCE_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<DisbursementRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DisbursementRecord, ?>>asList(Keys.DISBURSEMENT__FK_DISBURSEMENT_INSTITUTION_ACCOUNT_ID, Keys.DISBURSEMENT__FK_DISBURSEMENT_INSTITUTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Disbursement as(String alias) {
        return new Disbursement(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Disbursement rename(String name) {
        return new Disbursement(name, null);
    }
}
