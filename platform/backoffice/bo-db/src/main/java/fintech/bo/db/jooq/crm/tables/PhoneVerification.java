/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.crm.tables;


import fintech.bo.db.jooq.crm.Crm;
import fintech.bo.db.jooq.crm.Keys;
import fintech.bo.db.jooq.crm.tables.records.PhoneVerificationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PhoneVerification extends TableImpl<PhoneVerificationRecord> {

    private static final long serialVersionUID = -590424300;

    /**
     * The reference instance of <code>crm.phone_verification</code>
     */
    public static final PhoneVerification PHONE_VERIFICATION = new PhoneVerification();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PhoneVerificationRecord> getRecordType() {
        return PhoneVerificationRecord.class;
    }

    /**
     * The column <code>crm.phone_verification.id</code>.
     */
    public final TableField<PhoneVerificationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.created_at</code>.
     */
    public final TableField<PhoneVerificationRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.created_by</code>.
     */
    public final TableField<PhoneVerificationRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.phone_verification.entity_version</code>.
     */
    public final TableField<PhoneVerificationRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.updated_at</code>.
     */
    public final TableField<PhoneVerificationRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.updated_by</code>.
     */
    public final TableField<PhoneVerificationRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crm.phone_verification.code</code>.
     */
    public final TableField<PhoneVerificationRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.latest</code>.
     */
    public final TableField<PhoneVerificationRecord, Boolean> LATEST = createField("latest", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.verified</code>.
     */
    public final TableField<PhoneVerificationRecord, Boolean> VERIFIED = createField("verified", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.verified_at</code>.
     */
    public final TableField<PhoneVerificationRecord, LocalDateTime> VERIFIED_AT = createField("verified_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>crm.phone_verification.client_id</code>.
     */
    public final TableField<PhoneVerificationRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.phone_contact_id</code>.
     */
    public final TableField<PhoneVerificationRecord, Long> PHONE_CONTACT_ID = createField("phone_contact_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>crm.phone_verification.attempts</code>.
     */
    public final TableField<PhoneVerificationRecord, Integer> ATTEMPTS = createField("attempts", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>crm.phone_verification</code> table reference
     */
    public PhoneVerification() {
        this("phone_verification", null);
    }

    /**
     * Create an aliased <code>crm.phone_verification</code> table reference
     */
    public PhoneVerification(String alias) {
        this(alias, PHONE_VERIFICATION);
    }

    private PhoneVerification(String alias, Table<PhoneVerificationRecord> aliased) {
        this(alias, aliased, null);
    }

    private PhoneVerification(String alias, Table<PhoneVerificationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Crm.CRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PhoneVerificationRecord> getPrimaryKey() {
        return Keys.PHONE_VERIFICATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PhoneVerificationRecord>> getKeys() {
        return Arrays.<UniqueKey<PhoneVerificationRecord>>asList(Keys.PHONE_VERIFICATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PhoneVerificationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PhoneVerificationRecord, ?>>asList(Keys.PHONE_VERIFICATION__FK_PHONE_VERIFICATION_CLIENT_ID, Keys.PHONE_VERIFICATION__FK_PHONE_VERIFICATION_PHONE_CONTACT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhoneVerification as(String alias) {
        return new PhoneVerification(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PhoneVerification rename(String name) {
        return new PhoneVerification(name, null);
    }
}
