/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.security.tables;


import fintech.bo.db.jooq.security.Keys;
import fintech.bo.db.jooq.security.Security;
import fintech.bo.db.jooq.security.tables.records.PermissionRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Permission extends TableImpl<PermissionRecord> {

    private static final long serialVersionUID = -367331973;

    /**
     * The reference instance of <code>security.permission</code>
     */
    public static final Permission PERMISSION = new Permission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PermissionRecord> getRecordType() {
        return PermissionRecord.class;
    }

    /**
     * The column <code>security.permission.id</code>.
     */
    public final TableField<PermissionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('security.permission_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>security.permission.created_at</code>.
     */
    public final TableField<PermissionRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>security.permission.created_by</code>.
     */
    public final TableField<PermissionRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>security.permission.entity_version</code>.
     */
    public final TableField<PermissionRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>security.permission.updated_at</code>.
     */
    public final TableField<PermissionRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>security.permission.updated_by</code>.
     */
    public final TableField<PermissionRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>security.permission.name</code>.
     */
    public final TableField<PermissionRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>security.permission</code> table reference
     */
    public Permission() {
        this("permission", null);
    }

    /**
     * Create an aliased <code>security.permission</code> table reference
     */
    public Permission(String alias) {
        this(alias, PERMISSION);
    }

    private Permission(String alias, Table<PermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private Permission(String alias, Table<PermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Security.SECURITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PermissionRecord, Long> getIdentity() {
        return Keys.IDENTITY_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PermissionRecord> getPrimaryKey() {
        return Keys.PERMISSION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<PermissionRecord>>asList(Keys.PERMISSION_PKEY, Keys.UK_2OJME20JPGA3R4R79TDSO17GI);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Permission as(String alias) {
        return new Permission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Permission rename(String name) {
        return new Permission(name, null);
    }
}
