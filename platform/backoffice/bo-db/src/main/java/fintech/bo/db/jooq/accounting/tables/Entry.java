/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.accounting.tables;


import fintech.bo.db.jooq.accounting.Accounting;
import fintech.bo.db.jooq.accounting.Keys;
import fintech.bo.db.jooq.accounting.tables.records.EntryRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Entry extends TableImpl<EntryRecord> {

    private static final long serialVersionUID = -1029901342;

    /**
     * The reference instance of <code>accounting.entry</code>
     */
    public static final Entry ENTRY = new Entry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntryRecord> getRecordType() {
        return EntryRecord.class;
    }

    /**
     * The column <code>accounting.entry.id</code>.
     */
    public final TableField<EntryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.created_at</code>.
     */
    public final TableField<EntryRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.created_by</code>.
     */
    public final TableField<EntryRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>accounting.entry.entity_version</code>.
     */
    public final TableField<EntryRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.updated_at</code>.
     */
    public final TableField<EntryRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.updated_by</code>.
     */
    public final TableField<EntryRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>accounting.entry.amount</code>.
     */
    public final TableField<EntryRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>accounting.entry.booking_date</code>.
     */
    public final TableField<EntryRecord, LocalDate> BOOKING_DATE = createField("booking_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.client_id</code>.
     */
    public final TableField<EntryRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.credit</code>.
     */
    public final TableField<EntryRecord, BigDecimal> CREDIT = createField("credit", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>accounting.entry.debit</code>.
     */
    public final TableField<EntryRecord, BigDecimal> DEBIT = createField("debit", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>accounting.entry.disbursement_id</code>.
     */
    public final TableField<EntryRecord, Long> DISBURSEMENT_ID = createField("disbursement_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.entry_type</code>.
     */
    public final TableField<EntryRecord, String> ENTRY_TYPE = createField("entry_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.institution_account_id</code>.
     */
    public final TableField<EntryRecord, Long> INSTITUTION_ACCOUNT_ID = createField("institution_account_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.institution_id</code>.
     */
    public final TableField<EntryRecord, Long> INSTITUTION_ID = createField("institution_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.invoice_id</code>.
     */
    public final TableField<EntryRecord, Long> INVOICE_ID = createField("invoice_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.loan_id</code>.
     */
    public final TableField<EntryRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.payment_id</code>.
     */
    public final TableField<EntryRecord, Long> PAYMENT_ID = createField("payment_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.post_date</code>.
     */
    public final TableField<EntryRecord, LocalDate> POST_DATE = createField("post_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.product_id</code>.
     */
    public final TableField<EntryRecord, Long> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>accounting.entry.transaction_id</code>.
     */
    public final TableField<EntryRecord, Long> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.transaction_type</code>.
     */
    public final TableField<EntryRecord, String> TRANSACTION_TYPE = createField("transaction_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.value_date</code>.
     */
    public final TableField<EntryRecord, LocalDate> VALUE_DATE = createField("value_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>accounting.entry.account_id</code>.
     */
    public final TableField<EntryRecord, Long> ACCOUNT_ID = createField("account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>accounting.entry</code> table reference
     */
    public Entry() {
        this("entry", null);
    }

    /**
     * Create an aliased <code>accounting.entry</code> table reference
     */
    public Entry(String alias) {
        this(alias, ENTRY);
    }

    private Entry(String alias, Table<EntryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Entry(String alias, Table<EntryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Accounting.ACCOUNTING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntryRecord> getPrimaryKey() {
        return Keys.ENTRY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntryRecord>> getKeys() {
        return Arrays.<UniqueKey<EntryRecord>>asList(Keys.ENTRY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EntryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EntryRecord, ?>>asList(Keys.ENTRY__FK4CO40LLMT3YAMPXXSBFVP9ITQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Entry as(String alias) {
        return new Entry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Entry rename(String name) {
        return new Entry(name, null);
    }
}
