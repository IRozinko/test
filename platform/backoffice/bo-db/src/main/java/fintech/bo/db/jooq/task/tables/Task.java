/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.task.tables;


import fintech.bo.db.jooq.task.Keys;
import fintech.bo.db.jooq.task.tables.records.TaskRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Task extends TableImpl<TaskRecord> {

    private static final long serialVersionUID = -1534214671;

    /**
     * The reference instance of <code>task.task</code>
     */
    public static final Task TASK_ = new Task();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskRecord> getRecordType() {
        return TaskRecord.class;
    }

    /**
     * The column <code>task.task.id</code>.
     */
    public final TableField<TaskRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task.created_at</code>.
     */
    public final TableField<TaskRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>task.task.created_by</code>.
     */
    public final TableField<TaskRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.entity_version</code>.
     */
    public final TableField<TaskRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task.updated_at</code>.
     */
    public final TableField<TaskRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>task.task.updated_by</code>.
     */
    public final TableField<TaskRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.activity_id</code>.
     */
    public final TableField<TaskRecord, Long> ACTIVITY_ID = createField("activity_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>task.task.agent</code>.
     */
    public final TableField<TaskRecord, String> AGENT = createField("agent", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.application_id</code>.
     */
    public final TableField<TaskRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>task.task.assigned_at</code>.
     */
    public final TableField<TaskRecord, LocalDateTime> ASSIGNED_AT = createField("assigned_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>task.task.client_id</code>.
     */
    public final TableField<TaskRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task.comment</code>.
     */
    public final TableField<TaskRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.due_at</code>.
     */
    public final TableField<TaskRecord, LocalDateTime> DUE_AT = createField("due_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>task.task.expires_at</code>.
     */
    public final TableField<TaskRecord, LocalDateTime> EXPIRES_AT = createField("expires_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>task.task.task_group</code>.
     */
    public final TableField<TaskRecord, String> TASK_GROUP = createField("task_group", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>task.task.loan_id</code>.
     */
    public final TableField<TaskRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>task.task.priority</code>.
     */
    public final TableField<TaskRecord, Long> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task.resolution</code>.
     */
    public final TableField<TaskRecord, String> RESOLUTION = createField("resolution", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.resolution_detail</code>.
     */
    public final TableField<TaskRecord, String> RESOLUTION_DETAIL = createField("resolution_detail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.resolution_sub_detail</code>.
     */
    public final TableField<TaskRecord, String> RESOLUTION_SUB_DETAIL = createField("resolution_sub_detail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>task.task.status</code>.
     */
    public final TableField<TaskRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>task.task.task_type</code>.
     */
    public final TableField<TaskRecord, String> TASK_TYPE = createField("task_type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>task.task.times_postponed</code>.
     */
    public final TableField<TaskRecord, Long> TIMES_POSTPONED = createField("times_postponed", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task.times_reopened</code>.
     */
    public final TableField<TaskRecord, Long> TIMES_REOPENED = createField("times_reopened", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>task.task.workflow_id</code>.
     */
    public final TableField<TaskRecord, Long> WORKFLOW_ID = createField("workflow_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>task.task.installment_id</code>.
     */
    public final TableField<TaskRecord, Long> INSTALLMENT_ID = createField("installment_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>task.task.parent_task_id</code>.
     */
    public final TableField<TaskRecord, Long> PARENT_TASK_ID = createField("parent_task_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>task.task</code> table reference
     */
    public Task() {
        this("task", null);
    }

    /**
     * Create an aliased <code>task.task</code> table reference
     */
    public Task(String alias) {
        this(alias, TASK_);
    }

    private Task(String alias, Table<TaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private Task(String alias, Table<TaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return fintech.bo.db.jooq.task.Task.TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskRecord> getPrimaryKey() {
        return Keys.TASK_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskRecord>>asList(Keys.TASK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TaskRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TaskRecord, ?>>asList(Keys.TASK__FK_PARENT_TASK_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Task as(String alias) {
        return new Task(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Task rename(String name) {
        return new Task(name, null);
    }
}
