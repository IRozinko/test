/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.workflow.tables;


import fintech.bo.db.jooq.workflow.Keys;
import fintech.bo.db.jooq.workflow.Workflow;
import fintech.bo.db.jooq.workflow.tables.records.ScoringValueRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScoringValue extends TableImpl<ScoringValueRecord> {

    private static final long serialVersionUID = 1073447996;

    /**
     * The reference instance of <code>workflow.scoring_value</code>
     */
    public static final ScoringValue SCORING_VALUE = new ScoringValue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScoringValueRecord> getRecordType() {
        return ScoringValueRecord.class;
    }

    /**
     * The column <code>workflow.scoring_value.id</code>.
     */
    public final TableField<ScoringValueRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>workflow.scoring_value.created_at</code>.
     */
    public final TableField<ScoringValueRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>workflow.scoring_value.created_by</code>.
     */
    public final TableField<ScoringValueRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.scoring_value.entity_version</code>.
     */
    public final TableField<ScoringValueRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>workflow.scoring_value.updated_at</code>.
     */
    public final TableField<ScoringValueRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>workflow.scoring_value.updated_by</code>.
     */
    public final TableField<ScoringValueRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.scoring_value.workflow_id</code>.
     */
    public final TableField<ScoringValueRecord, Long> WORKFLOW_ID = createField("workflow_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>workflow.scoring_value.key</code>.
     */
    public final TableField<ScoringValueRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.scoring_value.value</code>.
     */
    public final TableField<ScoringValueRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>workflow.scoring_value.type</code>.
     */
    public final TableField<ScoringValueRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>workflow.scoring_value</code> table reference
     */
    public ScoringValue() {
        this("scoring_value", null);
    }

    /**
     * Create an aliased <code>workflow.scoring_value</code> table reference
     */
    public ScoringValue(String alias) {
        this(alias, SCORING_VALUE);
    }

    private ScoringValue(String alias, Table<ScoringValueRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScoringValue(String alias, Table<ScoringValueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Workflow.WORKFLOW;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ScoringValueRecord> getPrimaryKey() {
        return Keys.SCORING_VALUE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ScoringValueRecord>> getKeys() {
        return Arrays.<UniqueKey<ScoringValueRecord>>asList(Keys.SCORING_VALUE_PKEY, Keys.SCORING_VALUE_WORKFLOW_ID_KEY_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ScoringValueRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScoringValueRecord, ?>>asList(Keys.SCORING_VALUE__SCORING_VALUE_WORKFLOW_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoringValue as(String alias) {
        return new ScoringValue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScoringValue rename(String name) {
        return new ScoringValue(name, null);
    }
}
