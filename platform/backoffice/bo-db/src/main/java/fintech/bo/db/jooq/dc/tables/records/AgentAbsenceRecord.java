/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.dc.tables.records;


import fintech.bo.db.jooq.dc.tables.AgentAbsence;

import java.time.LocalDate;
import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AgentAbsenceRecord extends UpdatableRecordImpl<AgentAbsenceRecord> implements Record10<Long, LocalDateTime, String, Long, LocalDateTime, String, LocalDate, LocalDate, String, Long> {

    private static final long serialVersionUID = 559810872;

    /**
     * Setter for <code>dc.agent_absence.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>dc.agent_absence.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>dc.agent_absence.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>dc.agent_absence.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>dc.agent_absence.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>dc.agent_absence.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>dc.agent_absence.entity_version</code>.
     */
    public void setEntityVersion(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>dc.agent_absence.entity_version</code>.
     */
    public Long getEntityVersion() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>dc.agent_absence.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>dc.agent_absence.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>dc.agent_absence.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>dc.agent_absence.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>dc.agent_absence.date_from</code>.
     */
    public void setDateFrom(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>dc.agent_absence.date_from</code>.
     */
    public LocalDate getDateFrom() {
        return (LocalDate) get(6);
    }

    /**
     * Setter for <code>dc.agent_absence.date_to</code>.
     */
    public void setDateTo(LocalDate value) {
        set(7, value);
    }

    /**
     * Getter for <code>dc.agent_absence.date_to</code>.
     */
    public LocalDate getDateTo() {
        return (LocalDate) get(7);
    }

    /**
     * Setter for <code>dc.agent_absence.reason</code>.
     */
    public void setReason(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>dc.agent_absence.reason</code>.
     */
    public String getReason() {
        return (String) get(8);
    }

    /**
     * Setter for <code>dc.agent_absence.agent_id</code>.
     */
    public void setAgentId(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>dc.agent_absence.agent_id</code>.
     */
    public Long getAgentId() {
        return (Long) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, LocalDateTime, String, Long, LocalDateTime, String, LocalDate, LocalDate, String, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Long, LocalDateTime, String, Long, LocalDateTime, String, LocalDate, LocalDate, String, Long> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return AgentAbsence.AGENT_ABSENCE.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field2() {
        return AgentAbsence.AGENT_ABSENCE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return AgentAbsence.AGENT_ABSENCE.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return AgentAbsence.AGENT_ABSENCE.ENTITY_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field5() {
        return AgentAbsence.AGENT_ABSENCE.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return AgentAbsence.AGENT_ABSENCE.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field7() {
        return AgentAbsence.AGENT_ABSENCE.DATE_FROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDate> field8() {
        return AgentAbsence.AGENT_ABSENCE.DATE_TO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return AgentAbsence.AGENT_ABSENCE.REASON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return AgentAbsence.AGENT_ABSENCE.AGENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getEntityVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value5() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value7() {
        return getDateFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDate value8() {
        return getDateTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getReason();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getAgentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value3(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value4(Long value) {
        setEntityVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value5(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value7(LocalDate value) {
        setDateFrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value8(LocalDate value) {
        setDateTo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value9(String value) {
        setReason(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord value10(Long value) {
        setAgentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AgentAbsenceRecord values(Long value1, LocalDateTime value2, String value3, Long value4, LocalDateTime value5, String value6, LocalDate value7, LocalDate value8, String value9, Long value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AgentAbsenceRecord
     */
    public AgentAbsenceRecord() {
        super(AgentAbsence.AGENT_ABSENCE);
    }

    /**
     * Create a detached, initialised AgentAbsenceRecord
     */
    public AgentAbsenceRecord(Long id, LocalDateTime createdAt, String createdBy, Long entityVersion, LocalDateTime updatedAt, String updatedBy, LocalDate dateFrom, LocalDate dateTo, String reason, Long agentId) {
        super(AgentAbsence.AGENT_ABSENCE);

        set(0, id);
        set(1, createdAt);
        set(2, createdBy);
        set(3, entityVersion);
        set(4, updatedAt);
        set(5, updatedBy);
        set(6, dateFrom);
        set(7, dateTo);
        set(8, reason);
        set(9, agentId);
    }
}
