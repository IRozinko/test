/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.alfa.tables;


import fintech.bo.db.jooq.alfa.Alfa;
import fintech.bo.db.jooq.alfa.Keys;
import fintech.bo.db.jooq.alfa.tables.records.PopupAttributeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PopupAttribute extends TableImpl<PopupAttributeRecord> {

    private static final long serialVersionUID = 1067309187;

    /**
     * The reference instance of <code>alfa.popup_attribute</code>
     */
    public static final PopupAttribute POPUP_ATTRIBUTE = new PopupAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PopupAttributeRecord> getRecordType() {
        return PopupAttributeRecord.class;
    }

    /**
     * The column <code>alfa.popup_attribute.popup_id</code>.
     */
    public final TableField<PopupAttributeRecord, Long> POPUP_ID = createField("popup_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>alfa.popup_attribute.key</code>.
     */
    public final TableField<PopupAttributeRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>alfa.popup_attribute.value</code>.
     */
    public final TableField<PopupAttributeRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>alfa.popup_attribute</code> table reference
     */
    public PopupAttribute() {
        this("popup_attribute", null);
    }

    /**
     * Create an aliased <code>alfa.popup_attribute</code> table reference
     */
    public PopupAttribute(String alias) {
        this(alias, POPUP_ATTRIBUTE);
    }

    private PopupAttribute(String alias, Table<PopupAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private PopupAttribute(String alias, Table<PopupAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Alfa.ALFA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<PopupAttributeRecord> getPrimaryKey() {
        return Keys.POPUP_ATTRIBUTE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PopupAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<PopupAttributeRecord>>asList(Keys.POPUP_ATTRIBUTE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PopupAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PopupAttributeRecord, ?>>asList(Keys.POPUP_ATTRIBUTE__FK_POPUP_ATTRIBUTE_CLIENT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PopupAttribute as(String alias) {
        return new PopupAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PopupAttribute rename(String name) {
        return new PopupAttribute(name, null);
    }
}
