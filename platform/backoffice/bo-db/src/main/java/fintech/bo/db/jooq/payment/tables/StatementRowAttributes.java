/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.payment.tables;


import fintech.bo.db.jooq.payment.Keys;
import fintech.bo.db.jooq.payment.Payment;
import fintech.bo.db.jooq.payment.tables.records.StatementRowAttributesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatementRowAttributes extends TableImpl<StatementRowAttributesRecord> {

    private static final long serialVersionUID = 1977276185;

    /**
     * The reference instance of <code>payment.statement_row_attributes</code>
     */
    public static final StatementRowAttributes STATEMENT_ROW_ATTRIBUTES = new StatementRowAttributes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatementRowAttributesRecord> getRecordType() {
        return StatementRowAttributesRecord.class;
    }

    /**
     * The column <code>payment.statement_row_attributes.statement_row_id</code>.
     */
    public final TableField<StatementRowAttributesRecord, Long> STATEMENT_ROW_ID = createField("statement_row_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.statement_row_attributes.value</code>.
     */
    public final TableField<StatementRowAttributesRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.statement_row_attributes.key</code>.
     */
    public final TableField<StatementRowAttributesRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>payment.statement_row_attributes</code> table reference
     */
    public StatementRowAttributes() {
        this("statement_row_attributes", null);
    }

    /**
     * Create an aliased <code>payment.statement_row_attributes</code> table reference
     */
    public StatementRowAttributes(String alias) {
        this(alias, STATEMENT_ROW_ATTRIBUTES);
    }

    private StatementRowAttributes(String alias, Table<StatementRowAttributesRecord> aliased) {
        this(alias, aliased, null);
    }

    private StatementRowAttributes(String alias, Table<StatementRowAttributesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Payment.PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatementRowAttributesRecord> getPrimaryKey() {
        return Keys.STATEMENT_ROW_ATTRIBUTES_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatementRowAttributesRecord>> getKeys() {
        return Arrays.<UniqueKey<StatementRowAttributesRecord>>asList(Keys.STATEMENT_ROW_ATTRIBUTES_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<StatementRowAttributesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<StatementRowAttributesRecord, ?>>asList(Keys.STATEMENT_ROW_ATTRIBUTES__FK_STATEMENT_ROW_ATTRIBUTES_STATEMENT_ROW_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StatementRowAttributes as(String alias) {
        return new StatementRowAttributes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public StatementRowAttributes rename(String name) {
        return new StatementRowAttributes(name, null);
    }
}
