/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.payment.tables;


import fintech.bo.db.jooq.payment.Keys;
import fintech.bo.db.jooq.payment.Payment;
import fintech.bo.db.jooq.payment.tables.records.InstitutionAccountRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstitutionAccount extends TableImpl<InstitutionAccountRecord> {

    private static final long serialVersionUID = -747120310;

    /**
     * The reference instance of <code>payment.institution_account</code>
     */
    public static final InstitutionAccount INSTITUTION_ACCOUNT = new InstitutionAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InstitutionAccountRecord> getRecordType() {
        return InstitutionAccountRecord.class;
    }

    /**
     * The column <code>payment.institution_account.id</code>.
     */
    public final TableField<InstitutionAccountRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.created_at</code>.
     */
    public final TableField<InstitutionAccountRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.created_by</code>.
     */
    public final TableField<InstitutionAccountRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.institution_account.entity_version</code>.
     */
    public final TableField<InstitutionAccountRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.updated_at</code>.
     */
    public final TableField<InstitutionAccountRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.updated_by</code>.
     */
    public final TableField<InstitutionAccountRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>payment.institution_account.account_number</code>.
     */
    public final TableField<InstitutionAccountRecord, String> ACCOUNT_NUMBER = createField("account_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.accounting_account_code</code>.
     */
    public final TableField<InstitutionAccountRecord, String> ACCOUNTING_ACCOUNT_CODE = createField("accounting_account_code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.is_primary</code>.
     */
    public final TableField<InstitutionAccountRecord, Boolean> IS_PRIMARY = createField("is_primary", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>payment.institution_account.institution_id</code>.
     */
    public final TableField<InstitutionAccountRecord, Long> INSTITUTION_ID = createField("institution_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>payment.institution_account</code> table reference
     */
    public InstitutionAccount() {
        this("institution_account", null);
    }

    /**
     * Create an aliased <code>payment.institution_account</code> table reference
     */
    public InstitutionAccount(String alias) {
        this(alias, INSTITUTION_ACCOUNT);
    }

    private InstitutionAccount(String alias, Table<InstitutionAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private InstitutionAccount(String alias, Table<InstitutionAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Payment.PAYMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InstitutionAccountRecord> getPrimaryKey() {
        return Keys.INSTITUTION_ACCOUNT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InstitutionAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<InstitutionAccountRecord>>asList(Keys.INSTITUTION_ACCOUNT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InstitutionAccountRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InstitutionAccountRecord, ?>>asList(Keys.INSTITUTION_ACCOUNT__FK_INSTITUTION_ACCOUNT_INSTITUTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InstitutionAccount as(String alias) {
        return new InstitutionAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public InstitutionAccount rename(String name) {
        return new InstitutionAccount(name, null);
    }
}
