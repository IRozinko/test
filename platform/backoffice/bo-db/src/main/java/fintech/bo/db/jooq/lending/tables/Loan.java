/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.lending.tables;


import fintech.bo.db.jooq.lending.Keys;
import fintech.bo.db.jooq.lending.Lending;
import fintech.bo.db.jooq.lending.tables.records.LoanRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Loan extends TableImpl<LoanRecord> {

    private static final long serialVersionUID = -2094594506;

    /**
     * The reference instance of <code>lending.loan</code>
     */
    public static final Loan LOAN = new Loan();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LoanRecord> getRecordType() {
        return LoanRecord.class;
    }

    /**
     * The column <code>lending.loan.id</code>.
     */
    public final TableField<LoanRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.loan.created_at</code>.
     */
    public final TableField<LoanRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.loan.created_by</code>.
     */
    public final TableField<LoanRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.loan.entity_version</code>.
     */
    public final TableField<LoanRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.loan.updated_at</code>.
     */
    public final TableField<LoanRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.loan.updated_by</code>.
     */
    public final TableField<LoanRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.loan.cash_in</code>.
     */
    public final TableField<LoanRecord, BigDecimal> CASH_IN = createField("cash_in", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.cash_out</code>.
     */
    public final TableField<LoanRecord, BigDecimal> CASH_OUT = createField("cash_out", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.client_id</code>.
     */
    public final TableField<LoanRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.loan.close_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> CLOSE_DATE = createField("close_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.credit_limit</code>.
     */
    public final TableField<LoanRecord, BigDecimal> CREDIT_LIMIT = createField("credit_limit", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 2).nullable(false), this, "");

    /**
     * The column <code>lending.loan.fee_applied</code>.
     */
    public final TableField<LoanRecord, BigDecimal> FEE_APPLIED = createField("fee_applied", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.fee_due</code>.
     */
    public final TableField<LoanRecord, BigDecimal> FEE_DUE = createField("fee_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.fee_outstanding</code>.
     */
    public final TableField<LoanRecord, BigDecimal> FEE_OUTSTANDING = createField("fee_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.fee_paid</code>.
     */
    public final TableField<LoanRecord, BigDecimal> FEE_PAID = createField("fee_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.fee_written_off</code>.
     */
    public final TableField<LoanRecord, BigDecimal> FEE_WRITTEN_OFF = createField("fee_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.interest_applied</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_APPLIED = createField("interest_applied", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.interest_due</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_DUE = createField("interest_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.interest_outstanding</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_OUTSTANDING = createField("interest_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.interest_paid</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_PAID = createField("interest_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.interest_written_off</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_WRITTEN_OFF = createField("interest_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.invoice_payment_day</code>.
     */
    public final TableField<LoanRecord, Integer> INVOICE_PAYMENT_DAY = createField("invoice_payment_day", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lending.loan.issue_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> ISSUE_DATE = createField("issue_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.loan.loan_application_id</code>.
     */
    public final TableField<LoanRecord, Long> LOAN_APPLICATION_ID = createField("loan_application_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.loan.loans_paid</code>.
     */
    public final TableField<LoanRecord, Long> LOANS_PAID = createField("loans_paid", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.loan.maturity_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> MATURITY_DATE = createField("maturity_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.max_overdue_days</code>.
     */
    public final TableField<LoanRecord, Integer> MAX_OVERDUE_DAYS = createField("max_overdue_days", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lending.loan.loan_number</code>.
     */
    public final TableField<LoanRecord, String> LOAN_NUMBER = createField("loan_number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.loan.overdue_days</code>.
     */
    public final TableField<LoanRecord, Integer> OVERDUE_DAYS = createField("overdue_days", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lending.loan.payment_due_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> PAYMENT_DUE_DATE = createField("payment_due_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.penalty_applied</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PENALTY_APPLIED = createField("penalty_applied", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.penalty_due</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PENALTY_DUE = createField("penalty_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.penalty_outstanding</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PENALTY_OUTSTANDING = createField("penalty_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.penalty_paid</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PENALTY_PAID = createField("penalty_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.penalty_written_off</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PENALTY_WRITTEN_OFF = createField("penalty_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.principal_disbursed</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PRINCIPAL_DISBURSED = createField("principal_disbursed", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.principal_due</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PRINCIPAL_DUE = createField("principal_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.principal_outstanding</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PRINCIPAL_OUTSTANDING = createField("principal_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.principal_paid</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PRINCIPAL_PAID = createField("principal_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.principal_written_off</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PRINCIPAL_WRITTEN_OFF = createField("principal_written_off", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.product_id</code>.
     */
    public final TableField<LoanRecord, Long> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.loan.status</code>.
     */
    public final TableField<LoanRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.loan.status_detail</code>.
     */
    public final TableField<LoanRecord, String> STATUS_DETAIL = createField("status_detail", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.loan.total_due</code>.
     */
    public final TableField<LoanRecord, BigDecimal> TOTAL_DUE = createField("total_due", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.total_outstanding</code>.
     */
    public final TableField<LoanRecord, BigDecimal> TOTAL_OUTSTANDING = createField("total_outstanding", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.loan.overpayment_received</code>.
     */
    public final TableField<LoanRecord, BigDecimal> OVERPAYMENT_RECEIVED = createField("overpayment_received", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.overpayment_refunded</code>.
     */
    public final TableField<LoanRecord, BigDecimal> OVERPAYMENT_REFUNDED = createField("overpayment_refunded", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.overpayment_used</code>.
     */
    public final TableField<LoanRecord, BigDecimal> OVERPAYMENT_USED = createField("overpayment_used", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.overpayment_available</code>.
     */
    public final TableField<LoanRecord, BigDecimal> OVERPAYMENT_AVAILABLE = createField("overpayment_available", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.broken_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> BROKEN_DATE = createField("broken_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.rescheduled_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> RESCHEDULED_DATE = createField("rescheduled_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.reschedule_broken_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> RESCHEDULE_BROKEN_DATE = createField("reschedule_broken_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.moved_to_legal_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> MOVED_TO_LEGAL_DATE = createField("moved_to_legal_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.extensions</code>.
     */
    public final TableField<LoanRecord, Integer> EXTENSIONS = createField("extensions", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>lending.loan.extended_by_days</code>.
     */
    public final TableField<LoanRecord, Integer> EXTENDED_BY_DAYS = createField("extended_by_days", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>lending.loan.period_count</code>.
     */
    public final TableField<LoanRecord, Long> PERIOD_COUNT = createField("period_count", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>lending.loan.period_unit</code>.
     */
    public final TableField<LoanRecord, String> PERIOD_UNIT = createField("period_unit", org.jooq.impl.SQLDataType.CLOB.nullable(false).defaultValue(org.jooq.impl.DSL.field("'NA'::text", org.jooq.impl.SQLDataType.CLOB)), this, "");

    /**
     * The column <code>lending.loan.interest_discount_percent</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_DISCOUNT_PERCENT = createField("interest_discount_percent", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.interest_discount_amount</code>.
     */
    public final TableField<LoanRecord, BigDecimal> INTEREST_DISCOUNT_AMOUNT = createField("interest_discount_amount", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.penalty_suspended</code>.
     */
    public final TableField<LoanRecord, Boolean> PENALTY_SUSPENDED = createField("penalty_suspended", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>lending.loan.discount_id</code>.
     */
    public final TableField<LoanRecord, Long> DISCOUNT_ID = createField("discount_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.loan.principal_granted</code>.
     */
    public final TableField<LoanRecord, BigDecimal> PRINCIPAL_GRANTED = createField("principal_granted", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.credit_limit_available</code>.
     */
    public final TableField<LoanRecord, BigDecimal> CREDIT_LIMIT_AVAILABLE = createField("credit_limit_available", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0.0000", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.credit_limit_awarded</code>.
     */
    public final TableField<LoanRecord, BigDecimal> CREDIT_LIMIT_AWARDED = createField("credit_limit_awarded", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false).defaultValue(org.jooq.impl.DSL.field("0.0000", org.jooq.impl.SQLDataType.NUMERIC)), this, "");

    /**
     * The column <code>lending.loan.first_disbursement_date</code>.
     */
    public final TableField<LoanRecord, LocalDate> FIRST_DISBURSEMENT_DATE = createField("first_disbursement_date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>lending.loan.interest_strategy_id</code>.
     */
    public final TableField<LoanRecord, Long> INTEREST_STRATEGY_ID = createField("interest_strategy_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.loan.penalty_strategy_id</code>.
     */
    public final TableField<LoanRecord, Long> PENALTY_STRATEGY_ID = createField("penalty_strategy_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.loan.extension_strategy_id</code>.
     */
    public final TableField<LoanRecord, Long> EXTENSION_STRATEGY_ID = createField("extension_strategy_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.loan.fee_strategy_id</code>.
     */
    public final TableField<LoanRecord, Long> FEE_STRATEGY_ID = createField("fee_strategy_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.loan.promo_code_id</code>.
     */
    public final TableField<LoanRecord, Long> PROMO_CODE_ID = createField("promo_code_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.loan.compliant_with_aemip</code>.
     */
    public final TableField<LoanRecord, Boolean> COMPLIANT_WITH_AEMIP = createField("compliant_with_aemip", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>lending.loan.reason_for_break</code>.
     */
    public final TableField<LoanRecord, String> REASON_FOR_BREAK = createField("reason_for_break", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>lending.loan</code> table reference
     */
    public Loan() {
        this("loan", null);
    }

    /**
     * Create an aliased <code>lending.loan</code> table reference
     */
    public Loan(String alias) {
        this(alias, LOAN);
    }

    private Loan(String alias, Table<LoanRecord> aliased) {
        this(alias, aliased, null);
    }

    private Loan(String alias, Table<LoanRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lending.LENDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LoanRecord> getPrimaryKey() {
        return Keys.LOAN_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LoanRecord>> getKeys() {
        return Arrays.<UniqueKey<LoanRecord>>asList(Keys.LOAN_PKEY, Keys.UK_FXYA0BOW1YM2YJPNH2R2LIJV1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LoanRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LoanRecord, ?>>asList(Keys.LOAN__FK_LOAN_LOAN_APPLICATION_ID, Keys.LOAN__FK_LOAN_PRODUCT_ID, Keys.LOAN__LOAN_DISCOUNT_FK, Keys.LOAN__LOAN_PROMO_CODE_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Loan as(String alias) {
        return new Loan(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Loan rename(String name) {
        return new Loan(name, null);
    }
}
