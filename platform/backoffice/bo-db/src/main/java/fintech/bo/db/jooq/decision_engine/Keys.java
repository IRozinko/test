/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.decision_engine;


import fintech.bo.db.jooq.decision_engine.tables.Request;
import fintech.bo.db.jooq.decision_engine.tables.ScoringValueUsage;
import fintech.bo.db.jooq.decision_engine.tables.records.RequestRecord;
import fintech.bo.db.jooq.decision_engine.tables.records.ScoringValueUsageRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>decision_engine</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RequestRecord> REQUEST_PKEY = UniqueKeys0.REQUEST_PKEY;
    public static final UniqueKey<ScoringValueUsageRecord> SCORING_VALUE_USAGE_PKEY = UniqueKeys0.SCORING_VALUE_USAGE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<RequestRecord> REQUEST_PKEY = createUniqueKey(Request.REQUEST, "request_pkey", Request.REQUEST.ID);
        public static final UniqueKey<ScoringValueUsageRecord> SCORING_VALUE_USAGE_PKEY = createUniqueKey(ScoringValueUsage.SCORING_VALUE_USAGE, "scoring_value_usage_pkey", ScoringValueUsage.SCORING_VALUE_USAGE.ID);
    }
}
