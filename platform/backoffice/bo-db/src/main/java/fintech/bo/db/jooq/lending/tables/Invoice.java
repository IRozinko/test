/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.lending.tables;


import fintech.bo.db.jooq.lending.Keys;
import fintech.bo.db.jooq.lending.Lending;
import fintech.bo.db.jooq.lending.tables.records.InvoiceRecord;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Invoice extends TableImpl<InvoiceRecord> {

    private static final long serialVersionUID = 410130000;

    /**
     * The reference instance of <code>lending.invoice</code>
     */
    public static final Invoice INVOICE = new Invoice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InvoiceRecord> getRecordType() {
        return InvoiceRecord.class;
    }

    /**
     * The column <code>lending.invoice.id</code>.
     */
    public final TableField<InvoiceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.created_at</code>.
     */
    public final TableField<InvoiceRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.created_by</code>.
     */
    public final TableField<InvoiceRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.invoice.entity_version</code>.
     */
    public final TableField<InvoiceRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.updated_at</code>.
     */
    public final TableField<InvoiceRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.updated_by</code>.
     */
    public final TableField<InvoiceRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.invoice.client_id</code>.
     */
    public final TableField<InvoiceRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.close_date</code>.
     */
    public final TableField<InvoiceRecord, LocalDateTime> CLOSE_DATE = createField("close_date", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>lending.invoice.close_reason</code>.
     */
    public final TableField<InvoiceRecord, String> CLOSE_REASON = createField("close_reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.invoice.corrections</code>.
     */
    public final TableField<InvoiceRecord, Integer> CORRECTIONS = createField("corrections", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.due_date</code>.
     */
    public final TableField<InvoiceRecord, LocalDate> DUE_DATE = createField("due_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.file_id</code>.
     */
    public final TableField<InvoiceRecord, Long> FILE_ID = createField("file_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>lending.invoice.file_name</code>.
     */
    public final TableField<InvoiceRecord, String> FILE_NAME = createField("file_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.invoice.invoice_date</code>.
     */
    public final TableField<InvoiceRecord, LocalDate> INVOICE_DATE = createField("invoice_date", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.loan_id</code>.
     */
    public final TableField<InvoiceRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.number</code>.
     */
    public final TableField<InvoiceRecord, String> NUMBER = createField("number", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.period_from</code>.
     */
    public final TableField<InvoiceRecord, LocalDate> PERIOD_FROM = createField("period_from", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.period_to</code>.
     */
    public final TableField<InvoiceRecord, LocalDate> PERIOD_TO = createField("period_to", org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.product_id</code>.
     */
    public final TableField<InvoiceRecord, Long> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.status</code>.
     */
    public final TableField<InvoiceRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.status_detail</code>.
     */
    public final TableField<InvoiceRecord, String> STATUS_DETAIL = createField("status_detail", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>lending.invoice.total</code>.
     */
    public final TableField<InvoiceRecord, BigDecimal> TOTAL = createField("total", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.invoice.total_paid</code>.
     */
    public final TableField<InvoiceRecord, BigDecimal> TOTAL_PAID = createField("total_paid", org.jooq.impl.SQLDataType.NUMERIC.precision(19, 4).nullable(false), this, "");

    /**
     * The column <code>lending.invoice.voided</code>.
     */
    public final TableField<InvoiceRecord, Boolean> VOIDED = createField("voided", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>lending.invoice.sent_at</code>.
     */
    public final TableField<InvoiceRecord, LocalDateTime> SENT_AT = createField("sent_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>lending.invoice.generate_file</code>.
     */
    public final TableField<InvoiceRecord, Boolean> GENERATE_FILE = createField("generate_file", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>lending.invoice.send_file</code>.
     */
    public final TableField<InvoiceRecord, Boolean> SEND_FILE = createField("send_file", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>lending.invoice.membership_level_changed</code>.
     */
    public final TableField<InvoiceRecord, Boolean> MEMBERSHIP_LEVEL_CHANGED = createField("membership_level_changed", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>lending.invoice.manual</code>.
     */
    public final TableField<InvoiceRecord, Boolean> MANUAL = createField("manual", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>lending.invoice</code> table reference
     */
    public Invoice() {
        this("invoice", null);
    }

    /**
     * Create an aliased <code>lending.invoice</code> table reference
     */
    public Invoice(String alias) {
        this(alias, INVOICE);
    }

    private Invoice(String alias, Table<InvoiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Invoice(String alias, Table<InvoiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Lending.LENDING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InvoiceRecord> getPrimaryKey() {
        return Keys.INVOICE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InvoiceRecord>> getKeys() {
        return Arrays.<UniqueKey<InvoiceRecord>>asList(Keys.INVOICE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<InvoiceRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<InvoiceRecord, ?>>asList(Keys.INVOICE__FK_INVOICE_LOAN_ID, Keys.INVOICE__FK_INVOICE_PRODUCT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Invoice as(String alias) {
        return new Invoice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Invoice rename(String name) {
        return new Invoice(name, null);
    }
}
