/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.rule.tables;


import fintech.bo.db.jooq.rule.Keys;
import fintech.bo.db.jooq.rule.Rule;
import fintech.bo.db.jooq.rule.tables.records.RuleLogRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RuleLog extends TableImpl<RuleLogRecord> {

    private static final long serialVersionUID = -1160106834;

    /**
     * The reference instance of <code>rule.rule_log</code>
     */
    public static final RuleLog RULE_LOG = new RuleLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RuleLogRecord> getRecordType() {
        return RuleLogRecord.class;
    }

    /**
     * The column <code>rule.rule_log.id</code>.
     */
    public final TableField<RuleLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('rule.rule_log_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>rule.rule_log.created_at</code>.
     */
    public final TableField<RuleLogRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rule.rule_log.created_by</code>.
     */
    public final TableField<RuleLogRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_log.entity_version</code>.
     */
    public final TableField<RuleLogRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rule.rule_log.updated_at</code>.
     */
    public final TableField<RuleLogRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>rule.rule_log.updated_by</code>.
     */
    public final TableField<RuleLogRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_log.application_id</code>.
     */
    public final TableField<RuleLogRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>rule.rule_log.checks_json</code>.
     */
    public final TableField<RuleLogRecord, String> CHECKS_JSON = createField("checks_json", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_log.client_id</code>.
     */
    public final TableField<RuleLogRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>rule.rule_log.decision</code>.
     */
    public final TableField<RuleLogRecord, String> DECISION = createField("decision", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>rule.rule_log.loan_id</code>.
     */
    public final TableField<RuleLogRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>rule.rule_log.reason</code>.
     */
    public final TableField<RuleLogRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_log.reason_details</code>.
     */
    public final TableField<RuleLogRecord, String> REASON_DETAILS = createField("reason_details", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>rule.rule_log.rule</code>.
     */
    public final TableField<RuleLogRecord, String> RULE = createField("rule", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>rule.rule_log.rule_set_result_id</code>.
     */
    public final TableField<RuleLogRecord, Long> RULE_SET_RESULT_ID = createField("rule_set_result_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>rule.rule_log</code> table reference
     */
    public RuleLog() {
        this("rule_log", null);
    }

    /**
     * Create an aliased <code>rule.rule_log</code> table reference
     */
    public RuleLog(String alias) {
        this(alias, RULE_LOG);
    }

    private RuleLog(String alias, Table<RuleLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private RuleLog(String alias, Table<RuleLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Rule.RULE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RuleLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_RULE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RuleLogRecord> getPrimaryKey() {
        return Keys.RULE_LOG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RuleLogRecord>> getKeys() {
        return Arrays.<UniqueKey<RuleLogRecord>>asList(Keys.RULE_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RuleLogRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RuleLogRecord, ?>>asList(Keys.RULE_LOG__FKGP0I81BDWHD8KC3A1P4KQMV2X);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RuleLog as(String alias) {
        return new RuleLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RuleLog rename(String name) {
        return new RuleLog(name, null);
    }
}
