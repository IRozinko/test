package fintech.transactions;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;

@Getter
@NoArgsConstructor
@AllArgsConstructor
public enum TransactionType {

    ISSUE_LOAN,

    VOID_DISBURSEMENT,
    DISBURSEMENT(VOID_DISBURSEMENT),

    VOID_DISBURSEMENT_SETTLEMENT,
    DISBURSEMENT_SETTLEMENT(VOID_DISBURSEMENT_SETTLEMENT),

    VOID_REPAYMENT,
    REPAYMENT(VOID_REPAYMENT),

    VOID_LOAN_EXTENSION,
    LOAN_EXTENSION(VOID_LOAN_EXTENSION),

    VOID_APPLY_FEE,
    APPLY_FEE(VOID_APPLY_FEE),

    VOID_APPLY_INTEREST,
    APPLY_INTEREST(VOID_APPLY_INTEREST),

    VOID_APPLY_PENALTY,
    APPLY_PENALTY(VOID_APPLY_PENALTY),

    VOID_MANUAL,
    MANUAL(VOID_MANUAL),

    INSTALLMENT,
    CANCEL_INSTALLMENT,

    VOID_INVOICE,
    INVOICE(VOID_INVOICE),

    VOID_PAYMENT,
    PAYMENT(VOID_PAYMENT),
    VOID_WRITE_OFF,
    WRITE_OFF(VOID_WRITE_OFF),

    VOID_OVERPAYMENT,
    OVERPAYMENT(VOID_OVERPAYMENT),

    VOID_REFUND_OVERPAYMENT,
    REFUND_OVERPAYMENT(VOID_REFUND_OVERPAYMENT),

    BREAK_LOAN,
    RESCHEDULE_LOAN,
    BREAK_LOAN_RESCHEDULE,

    VOID_MOVE_LOAN_TO_LEGAL,
    MOVE_LOAN_TO_LEGAL(VOID_MOVE_LOAN_TO_LEGAL),

    VOID_LOAN,

    VOID_RENOUNCE_LOAN,
    RENOUNCE_LOAN(VOID_RENOUNCE_LOAN),

    VOID_SOLD_LOAN,
    SOLD_LOAN(VOID_SOLD_LOAN),

    UPDATE_CREDIT_LIMIT,
    UPDATE_AVAILABLE_CREDIT_LIMIT;

    private TransactionType voidTransactionType;

}
