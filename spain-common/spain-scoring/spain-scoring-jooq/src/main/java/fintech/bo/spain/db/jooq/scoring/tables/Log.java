/*
 * This file is generated by jOOQ.
*/
package fintech.bo.spain.db.jooq.scoring.tables;


import fintech.bo.spain.db.jooq.scoring.Keys;
import fintech.bo.spain.db.jooq.scoring.SpainScoring;
import fintech.bo.spain.db.jooq.scoring.tables.records.LogRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Log extends TableImpl<LogRecord> {

    private static final long serialVersionUID = -1718320680;

    /**
     * The reference instance of <code>spain_scoring.log</code>
     */
    public static final Log LOG = new Log();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogRecord> getRecordType() {
        return LogRecord.class;
    }

    /**
     * The column <code>spain_scoring.log.id</code>.
     */
    public final TableField<LogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.created_at</code>.
     */
    public final TableField<LogRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.created_by</code>.
     */
    public final TableField<LogRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_scoring.log.entity_version</code>.
     */
    public final TableField<LogRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.updated_at</code>.
     */
    public final TableField<LogRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.updated_by</code>.
     */
    public final TableField<LogRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_scoring.log.application_id</code>.
     */
    public final TableField<LogRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>spain_scoring.log.client_id</code>.
     */
    public final TableField<LogRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>spain_scoring.log.error</code>.
     */
    public final TableField<LogRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_scoring.log.loan_id</code>.
     */
    public final TableField<LogRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>spain_scoring.log.request_attributes</code>.
     */
    public final TableField<LogRecord, String> REQUEST_ATTRIBUTES = createField("request_attributes", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_scoring.log.response_body</code>.
     */
    public final TableField<LogRecord, String> RESPONSE_BODY = createField("response_body", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_scoring.log.response_status_code</code>.
     */
    public final TableField<LogRecord, Integer> RESPONSE_STATUS_CODE = createField("response_status_code", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.score</code>.
     */
    public final TableField<LogRecord, Double> SCORE = createField("score", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.status</code>.
     */
    public final TableField<LogRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>spain_scoring.log.type</code>.
     */
    public final TableField<LogRecord, String> TYPE = createField("type", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>spain_scoring.log</code> table reference
     */
    public Log() {
        this("log", null);
    }

    /**
     * Create an aliased <code>spain_scoring.log</code> table reference
     */
    public Log(String alias) {
        this(alias, LOG);
    }

    private Log(String alias, Table<LogRecord> aliased) {
        this(alias, aliased, null);
    }

    private Log(String alias, Table<LogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainScoring.SPAIN_SCORING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogRecord> getPrimaryKey() {
        return Keys.LOG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogRecord>> getKeys() {
        return Arrays.<UniqueKey<LogRecord>>asList(Keys.LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Log as(String alias) {
        return new Log(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Log rename(String name) {
        return new Log(name, null);
    }
}
