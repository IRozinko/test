/*
 * This file is generated by jOOQ.
*/
package fintech.spain.consents.db.jooq.tables;


import fintech.spain.consents.db.jooq.SpainConsents;
import fintech.spain.consents.db.jooq.tables.records.TermsRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Terms extends TableImpl<TermsRecord> {

    private static final long serialVersionUID = -1300580830;

    /**
     * The reference instance of <code>spain_consents.terms</code>
     */
    public static final Terms TERMS = new Terms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TermsRecord> getRecordType() {
        return TermsRecord.class;
    }

    /**
     * The column <code>spain_consents.terms.id</code>.
     */
    public final TableField<TermsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.created_at</code>.
     */
    public final TableField<TermsRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.created_by</code>.
     */
    public final TableField<TermsRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_consents.terms.entity_version</code>.
     */
    public final TableField<TermsRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.updated_at</code>.
     */
    public final TableField<TermsRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.updated_by</code>.
     */
    public final TableField<TermsRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_consents.terms.name</code>.
     */
    public final TableField<TermsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.text</code>.
     */
    public final TableField<TermsRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.version</code>.
     */
    public final TableField<TermsRecord, String> VERSION = createField("version", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>spain_consents.terms.changed_at</code>.
     */
    public final TableField<TermsRecord, LocalDateTime> CHANGED_AT = createField("changed_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * Create a <code>spain_consents.terms</code> table reference
     */
    public Terms() {
        this("terms", null);
    }

    /**
     * Create an aliased <code>spain_consents.terms</code> table reference
     */
    public Terms(String alias) {
        this(alias, TERMS);
    }

    private Terms(String alias, Table<TermsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Terms(String alias, Table<TermsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainConsents.SPAIN_CONSENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Terms as(String alias) {
        return new Terms(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Terms rename(String name) {
        return new Terms(name, null);
    }
}
