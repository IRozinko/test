/*
 * This file is generated by jOOQ.
*/
package fintech.bo.db.jooq.callcenter.tables;


import fintech.bo.db.jooq.callcenter.Keys;
import fintech.bo.db.jooq.callcenter.SpainCallcenter;
import fintech.bo.db.jooq.callcenter.tables.records.CallRecord;
import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Call extends TableImpl<CallRecord> {

    private static final long serialVersionUID = -1218815067;

    /**
     * The reference instance of <code>spain_callcenter.call</code>
     */
    public static final Call CALL = new Call();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CallRecord> getRecordType() {
        return CallRecord.class;
    }

    /**
     * The column <code>spain_callcenter.call.id</code>.
     */
    public final TableField<CallRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_callcenter.call.entity_version</code>.
     */
    public final TableField<CallRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_callcenter.call.created_at</code>.
     */
    public final TableField<CallRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_callcenter.call.updated_at</code>.
     */
    public final TableField<CallRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_callcenter.call.created_by</code>.
     */
    public final TableField<CallRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_callcenter.call.updated_by</code>.
     */
    public final TableField<CallRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_callcenter.call.provider_id</code>.
     */
    public final TableField<CallRecord, Long> PROVIDER_ID = createField("provider_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_callcenter.call.client_id</code>.
     */
    public final TableField<CallRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_callcenter.call.status</code>.
     */
    public final TableField<CallRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>spain_callcenter.call</code> table reference
     */
    public Call() {
        this("call", null);
    }

    /**
     * Create an aliased <code>spain_callcenter.call</code> table reference
     */
    public Call(String alias) {
        this(alias, CALL);
    }

    private Call(String alias, Table<CallRecord> aliased) {
        this(alias, aliased, null);
    }

    private Call(String alias, Table<CallRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainCallcenter.SPAIN_CALLCENTER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CallRecord> getPrimaryKey() {
        return Keys.CALL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CallRecord>> getKeys() {
        return Arrays.<UniqueKey<CallRecord>>asList(Keys.CALL_PKEY, Keys.CALL_CLIENT_ID_PROVIDER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Call as(String alias) {
        return new Call(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Call rename(String name) {
        return new Call(name, null);
    }
}
