/*
 * This file is generated by jOOQ.
*/
package fintech.bo.spain.db.jooq.asnef.tables;


import fintech.bo.spain.db.jooq.asnef.Keys;
import fintech.bo.spain.db.jooq.asnef.SpainAsnef;
import fintech.bo.spain.db.jooq.asnef.tables.records.LogRowRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogRow extends TableImpl<LogRowRecord> {

    private static final long serialVersionUID = 519483118;

    /**
     * The reference instance of <code>spain_asnef.log_row</code>
     */
    public static final LogRow LOG_ROW = new LogRow();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LogRowRecord> getRecordType() {
        return LogRowRecord.class;
    }

    /**
     * The column <code>spain_asnef.log_row.id</code>.
     */
    public final TableField<LogRowRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.entity_version</code>.
     */
    public final TableField<LogRowRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.created_at</code>.
     */
    public final TableField<LogRowRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.updated_at</code>.
     */
    public final TableField<LogRowRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.created_by</code>.
     */
    public final TableField<LogRowRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_asnef.log_row.updated_by</code>.
     */
    public final TableField<LogRowRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_asnef.log_row.status</code>.
     */
    public final TableField<LogRowRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.client_id</code>.
     */
    public final TableField<LogRowRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.loan_id</code>.
     */
    public final TableField<LogRowRecord, Long> LOAN_ID = createField("loan_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.outgoing_row</code>.
     */
    public final TableField<LogRowRecord, String> OUTGOING_ROW = createField("outgoing_row", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>spain_asnef.log_row.incoming_row</code>.
     */
    public final TableField<LogRowRecord, String> INCOMING_ROW = createField("incoming_row", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_asnef.log_row.log_id</code>.
     */
    public final TableField<LogRowRecord, Long> LOG_ID = createField("log_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>spain_asnef.log_row</code> table reference
     */
    public LogRow() {
        this("log_row", null);
    }

    /**
     * Create an aliased <code>spain_asnef.log_row</code> table reference
     */
    public LogRow(String alias) {
        this(alias, LOG_ROW);
    }

    private LogRow(String alias, Table<LogRowRecord> aliased) {
        this(alias, aliased, null);
    }

    private LogRow(String alias, Table<LogRowRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainAsnef.SPAIN_ASNEF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LogRowRecord> getPrimaryKey() {
        return Keys.LOG_ROW_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LogRowRecord>> getKeys() {
        return Arrays.<UniqueKey<LogRowRecord>>asList(Keys.LOG_ROW_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LogRowRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LogRowRecord, ?>>asList(Keys.LOG_ROW__LOG_ROW_LOG_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRow as(String alias) {
        return new LogRow(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public LogRow rename(String name) {
        return new LogRow(name, null);
    }
}
