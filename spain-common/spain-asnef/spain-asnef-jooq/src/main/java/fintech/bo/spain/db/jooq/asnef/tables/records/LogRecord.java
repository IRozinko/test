/*
 * This file is generated by jOOQ.
*/
package fintech.bo.spain.db.jooq.asnef.tables.records;


import fintech.bo.spain.db.jooq.asnef.tables.Log;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogRecord extends UpdatableRecordImpl<LogRecord> implements Record13<Long, Long, LocalDateTime, LocalDateTime, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = 1244121640;

    /**
     * Setter for <code>spain_asnef.log.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>spain_asnef.log.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>spain_asnef.log.entity_version</code>.
     */
    public void setEntityVersion(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>spain_asnef.log.entity_version</code>.
     */
    public Long getEntityVersion() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>spain_asnef.log.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>spain_asnef.log.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>spain_asnef.log.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>spain_asnef.log.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>spain_asnef.log.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>spain_asnef.log.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(4);
    }

    /**
     * Setter for <code>spain_asnef.log.updated_by</code>.
     */
    public void setUpdatedBy(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>spain_asnef.log.updated_by</code>.
     */
    public String getUpdatedBy() {
        return (String) get(5);
    }

    /**
     * Setter for <code>spain_asnef.log.type</code>.
     */
    public void setType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>spain_asnef.log.type</code>.
     */
    public String getType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>spain_asnef.log.status</code>.
     */
    public void setStatus(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>spain_asnef.log.status</code>.
     */
    public String getStatus() {
        return (String) get(7);
    }

    /**
     * Setter for <code>spain_asnef.log.prepared_at</code>.
     */
    public void setPreparedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>spain_asnef.log.prepared_at</code>.
     */
    public LocalDateTime getPreparedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>spain_asnef.log.exported_at</code>.
     */
    public void setExportedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>spain_asnef.log.exported_at</code>.
     */
    public LocalDateTime getExportedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>spain_asnef.log.response_received_at</code>.
     */
    public void setResponseReceivedAt(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>spain_asnef.log.response_received_at</code>.
     */
    public LocalDateTime getResponseReceivedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>spain_asnef.log.outgoing_file_id</code>.
     */
    public void setOutgoingFileId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>spain_asnef.log.outgoing_file_id</code>.
     */
    public Long getOutgoingFileId() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>spain_asnef.log.incoming_file_id</code>.
     */
    public void setIncomingFileId(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>spain_asnef.log.incoming_file_id</code>.
     */
    public Long getIncomingFileId() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Long, LocalDateTime, LocalDateTime, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row13<Long, Long, LocalDateTime, LocalDateTime, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime, Long, Long> valuesRow() {
        return (Row13) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Log.LOG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Log.LOG.ENTITY_VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field3() {
        return Log.LOG.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Log.LOG.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Log.LOG.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Log.LOG.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Log.LOG.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Log.LOG.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field9() {
        return Log.LOG.PREPARED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field10() {
        return Log.LOG.EXPORTED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field11() {
        return Log.LOG.RESPONSE_RECEIVED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return Log.LOG.OUTGOING_FILE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field13() {
        return Log.LOG.INCOMING_FILE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getEntityVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value9() {
        return getPreparedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value10() {
        return getExportedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value11() {
        return getResponseReceivedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getOutgoingFileId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value13() {
        return getIncomingFileId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value2(Long value) {
        setEntityVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value4(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value5(String value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value6(String value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value7(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value8(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value9(LocalDateTime value) {
        setPreparedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value10(LocalDateTime value) {
        setExportedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value11(LocalDateTime value) {
        setResponseReceivedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value12(Long value) {
        setOutgoingFileId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord value13(Long value) {
        setIncomingFileId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LogRecord values(Long value1, Long value2, LocalDateTime value3, LocalDateTime value4, String value5, String value6, String value7, String value8, LocalDateTime value9, LocalDateTime value10, LocalDateTime value11, Long value12, Long value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogRecord
     */
    public LogRecord() {
        super(Log.LOG);
    }

    /**
     * Create a detached, initialised LogRecord
     */
    public LogRecord(Long id, Long entityVersion, LocalDateTime createdAt, LocalDateTime updatedAt, String createdBy, String updatedBy, String type, String status, LocalDateTime preparedAt, LocalDateTime exportedAt, LocalDateTime responseReceivedAt, Long outgoingFileId, Long incomingFileId) {
        super(Log.LOG);

        set(0, id);
        set(1, entityVersion);
        set(2, createdAt);
        set(3, updatedAt);
        set(4, createdBy);
        set(5, updatedBy);
        set(6, type);
        set(7, status);
        set(8, preparedAt);
        set(9, exportedAt);
        set(10, responseReceivedAt);
        set(11, outgoingFileId);
        set(12, incomingFileId);
    }
}
