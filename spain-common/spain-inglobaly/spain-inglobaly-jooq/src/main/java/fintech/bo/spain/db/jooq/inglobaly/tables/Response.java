/*
 * This file is generated by jOOQ.
*/
package fintech.bo.spain.db.jooq.inglobaly.tables;


import fintech.bo.spain.db.jooq.inglobaly.Keys;
import fintech.bo.spain.db.jooq.inglobaly.SpainInglobaly;
import fintech.bo.spain.db.jooq.inglobaly.tables.records.ResponseRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Response extends TableImpl<ResponseRecord> {

    private static final long serialVersionUID = -1190575744;

    /**
     * The reference instance of <code>spain_inglobaly.response</code>
     */
    public static final Response RESPONSE = new Response();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResponseRecord> getRecordType() {
        return ResponseRecord.class;
    }

    /**
     * The column <code>spain_inglobaly.response.id</code>.
     */
    public final TableField<ResponseRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_inglobaly.response.created_at</code>.
     */
    public final TableField<ResponseRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_inglobaly.response.created_by</code>.
     */
    public final TableField<ResponseRecord, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.entity_version</code>.
     */
    public final TableField<ResponseRecord, Long> ENTITY_VERSION = createField("entity_version", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>spain_inglobaly.response.updated_at</code>.
     */
    public final TableField<ResponseRecord, LocalDateTime> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>spain_inglobaly.response.updated_by</code>.
     */
    public final TableField<ResponseRecord, String> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.application_id</code>.
     */
    public final TableField<ResponseRecord, Long> APPLICATION_ID = createField("application_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>spain_inglobaly.response.client_id</code>.
     */
    public final TableField<ResponseRecord, Long> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>spain_inglobaly.response.date_of_birth</code>.
     */
    public final TableField<ResponseRecord, LocalDate> DATE_OF_BIRTH = createField("date_of_birth", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>spain_inglobaly.response.error</code>.
     */
    public final TableField<ResponseRecord, String> ERROR = createField("error", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.first_name</code>.
     */
    public final TableField<ResponseRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.last_name</code>.
     */
    public final TableField<ResponseRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.requested_document_number</code>.
     */
    public final TableField<ResponseRecord, String> REQUESTED_DOCUMENT_NUMBER = createField("requested_document_number", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.response_body</code>.
     */
    public final TableField<ResponseRecord, String> RESPONSE_BODY = createField("response_body", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.second_last_name</code>.
     */
    public final TableField<ResponseRecord, String> SECOND_LAST_NAME = createField("second_last_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>spain_inglobaly.response.status</code>.
     */
    public final TableField<ResponseRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>spain_inglobaly.response</code> table reference
     */
    public Response() {
        this("response", null);
    }

    /**
     * Create an aliased <code>spain_inglobaly.response</code> table reference
     */
    public Response(String alias) {
        this(alias, RESPONSE);
    }

    private Response(String alias, Table<ResponseRecord> aliased) {
        this(alias, aliased, null);
    }

    private Response(String alias, Table<ResponseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SpainInglobaly.SPAIN_INGLOBALY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResponseRecord> getPrimaryKey() {
        return Keys.RESPONSE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResponseRecord>> getKeys() {
        return Arrays.<UniqueKey<ResponseRecord>>asList(Keys.RESPONSE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Response as(String alias) {
        return new Response(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Response rename(String name) {
        return new Response(name, null);
    }
}
